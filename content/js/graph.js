/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 248.0, "minX": 0.0, "maxY": 79371.0, "series": [{"data": [[0.0, 4324.0], [0.1, 4324.0], [0.2, 4324.0], [0.3, 4324.0], [0.4, 4324.0], [0.5, 4324.0], [0.6, 4324.0], [0.7, 4324.0], [0.8, 4324.0], [0.9, 4324.0], [1.0, 4324.0], [1.1, 4324.0], [1.2, 4324.0], [1.3, 4324.0], [1.4, 4324.0], [1.5, 4324.0], [1.6, 4324.0], [1.7, 4383.0], [1.8, 4383.0], [1.9, 4383.0], [2.0, 4383.0], [2.1, 4383.0], [2.2, 4383.0], [2.3, 4383.0], [2.4, 4383.0], [2.5, 4383.0], [2.6, 4383.0], [2.7, 4383.0], [2.8, 4383.0], [2.9, 4383.0], [3.0, 4383.0], [3.1, 4383.0], [3.2, 4383.0], [3.3, 4383.0], [3.4, 5280.0], [3.5, 5280.0], [3.6, 5280.0], [3.7, 5280.0], [3.8, 5280.0], [3.9, 5280.0], [4.0, 5280.0], [4.1, 5280.0], [4.2, 5280.0], [4.3, 5280.0], [4.4, 5280.0], [4.5, 5280.0], [4.6, 5280.0], [4.7, 5280.0], [4.8, 5280.0], [4.9, 5280.0], [5.0, 8357.0], [5.1, 8357.0], [5.2, 8357.0], [5.3, 8357.0], [5.4, 8357.0], [5.5, 8357.0], [5.6, 8357.0], [5.7, 8357.0], [5.8, 8357.0], [5.9, 8357.0], [6.0, 8357.0], [6.1, 8357.0], [6.2, 8357.0], [6.3, 8357.0], [6.4, 8357.0], [6.5, 8357.0], [6.6, 8357.0], [6.7, 9168.0], [6.8, 9168.0], [6.9, 9168.0], [7.0, 9168.0], [7.1, 9168.0], [7.2, 9168.0], [7.3, 9168.0], [7.4, 9168.0], [7.5, 9168.0], [7.6, 9168.0], [7.7, 9168.0], [7.8, 9168.0], [7.9, 9168.0], [8.0, 9168.0], [8.1, 9168.0], [8.2, 9168.0], [8.3, 9168.0], [8.4, 9499.0], [8.5, 9499.0], [8.6, 9499.0], [8.7, 9499.0], [8.8, 9499.0], [8.9, 9499.0], [9.0, 9499.0], [9.1, 9499.0], [9.2, 9499.0], [9.3, 9499.0], [9.4, 9499.0], [9.5, 9499.0], [9.6, 9499.0], [9.7, 9499.0], [9.8, 9499.0], [9.9, 9499.0], [10.0, 10223.0], [10.1, 10223.0], [10.2, 10223.0], [10.3, 10223.0], [10.4, 10223.0], [10.5, 10223.0], [10.6, 10223.0], [10.7, 10223.0], [10.8, 10223.0], [10.9, 10223.0], [11.0, 10223.0], [11.1, 10223.0], [11.2, 10223.0], [11.3, 10223.0], [11.4, 10223.0], [11.5, 10223.0], [11.6, 10223.0], [11.7, 12921.0], [11.8, 12921.0], [11.9, 12921.0], [12.0, 12921.0], [12.1, 12921.0], [12.2, 12921.0], [12.3, 12921.0], [12.4, 12921.0], [12.5, 12921.0], [12.6, 12921.0], [12.7, 12921.0], [12.8, 12921.0], [12.9, 12921.0], [13.0, 12921.0], [13.1, 12921.0], [13.2, 12921.0], [13.3, 12921.0], [13.4, 15297.0], [13.5, 15297.0], [13.6, 15297.0], [13.7, 15297.0], [13.8, 15297.0], [13.9, 15297.0], [14.0, 15297.0], [14.1, 15297.0], [14.2, 15297.0], [14.3, 15297.0], [14.4, 15297.0], [14.5, 15297.0], [14.6, 15297.0], [14.7, 15297.0], [14.8, 15297.0], [14.9, 15297.0], [15.0, 15472.0], [15.1, 15472.0], [15.2, 15472.0], [15.3, 15472.0], [15.4, 15472.0], [15.5, 15472.0], [15.6, 15472.0], [15.7, 15472.0], [15.8, 15472.0], [15.9, 15472.0], [16.0, 15472.0], [16.1, 15472.0], [16.2, 15472.0], [16.3, 15472.0], [16.4, 15472.0], [16.5, 15472.0], [16.6, 15472.0], [16.7, 16024.0], [16.8, 16024.0], [16.9, 16024.0], [17.0, 16024.0], [17.1, 16024.0], [17.2, 16024.0], [17.3, 16024.0], [17.4, 16024.0], [17.5, 16024.0], [17.6, 16024.0], [17.7, 16024.0], [17.8, 16024.0], [17.9, 16024.0], [18.0, 16024.0], [18.1, 16024.0], [18.2, 16024.0], [18.3, 16024.0], [18.4, 16059.0], [18.5, 16059.0], [18.6, 16059.0], [18.7, 16059.0], [18.8, 16059.0], [18.9, 16059.0], [19.0, 16059.0], [19.1, 16059.0], [19.2, 16059.0], [19.3, 16059.0], [19.4, 16059.0], [19.5, 16059.0], [19.6, 16059.0], [19.7, 16059.0], [19.8, 16059.0], [19.9, 16059.0], [20.0, 17471.0], [20.1, 17471.0], [20.2, 17471.0], [20.3, 17471.0], [20.4, 17471.0], [20.5, 17471.0], [20.6, 17471.0], [20.7, 17471.0], [20.8, 17471.0], [20.9, 17471.0], [21.0, 17471.0], [21.1, 17471.0], [21.2, 17471.0], [21.3, 17471.0], [21.4, 17471.0], [21.5, 17471.0], [21.6, 17471.0], [21.7, 24885.0], [21.8, 24885.0], [21.9, 24885.0], [22.0, 24885.0], [22.1, 24885.0], [22.2, 24885.0], [22.3, 24885.0], [22.4, 24885.0], [22.5, 24885.0], [22.6, 24885.0], [22.7, 24885.0], [22.8, 24885.0], [22.9, 24885.0], [23.0, 24885.0], [23.1, 24885.0], [23.2, 24885.0], [23.3, 24885.0], [23.4, 26355.0], [23.5, 26355.0], [23.6, 26355.0], [23.7, 26355.0], [23.8, 26355.0], [23.9, 26355.0], [24.0, 26355.0], [24.1, 26355.0], [24.2, 26355.0], [24.3, 26355.0], [24.4, 26355.0], [24.5, 26355.0], [24.6, 26355.0], [24.7, 26355.0], [24.8, 26355.0], [24.9, 26355.0], [25.0, 26355.0], [25.1, 27811.0], [25.2, 27811.0], [25.3, 27811.0], [25.4, 27811.0], [25.5, 27811.0], [25.6, 27811.0], [25.7, 27811.0], [25.8, 27811.0], [25.9, 27811.0], [26.0, 27811.0], [26.1, 27811.0], [26.2, 27811.0], [26.3, 27811.0], [26.4, 27811.0], [26.5, 27811.0], [26.6, 27811.0], [26.7, 28573.0], [26.8, 28573.0], [26.9, 28573.0], [27.0, 28573.0], [27.1, 28573.0], [27.2, 28573.0], [27.3, 28573.0], [27.4, 28573.0], [27.5, 28573.0], [27.6, 28573.0], [27.7, 28573.0], [27.8, 28573.0], [27.9, 28573.0], [28.0, 28573.0], [28.1, 28573.0], [28.2, 28573.0], [28.3, 28573.0], [28.4, 32454.0], [28.5, 32454.0], [28.6, 32454.0], [28.7, 32454.0], [28.8, 32454.0], [28.9, 32454.0], [29.0, 32454.0], [29.1, 32454.0], [29.2, 32454.0], [29.3, 32454.0], [29.4, 32454.0], [29.5, 32454.0], [29.6, 32454.0], [29.7, 32454.0], [29.8, 32454.0], [29.9, 32454.0], [30.0, 32454.0], [30.1, 36953.0], [30.2, 36953.0], [30.3, 36953.0], [30.4, 36953.0], [30.5, 36953.0], [30.6, 36953.0], [30.7, 36953.0], [30.8, 36953.0], [30.9, 36953.0], [31.0, 36953.0], [31.1, 36953.0], [31.2, 36953.0], [31.3, 36953.0], [31.4, 36953.0], [31.5, 36953.0], [31.6, 36953.0], [31.7, 39058.0], [31.8, 39058.0], [31.9, 39058.0], [32.0, 39058.0], [32.1, 39058.0], [32.2, 39058.0], [32.3, 39058.0], [32.4, 39058.0], [32.5, 39058.0], [32.6, 39058.0], [32.7, 39058.0], [32.8, 39058.0], [32.9, 39058.0], [33.0, 39058.0], [33.1, 39058.0], [33.2, 39058.0], [33.3, 39058.0], [33.4, 45463.0], [33.5, 45463.0], [33.6, 45463.0], [33.7, 45463.0], [33.8, 45463.0], [33.9, 45463.0], [34.0, 45463.0], [34.1, 45463.0], [34.2, 45463.0], [34.3, 45463.0], [34.4, 45463.0], [34.5, 45463.0], [34.6, 45463.0], [34.7, 45463.0], [34.8, 45463.0], [34.9, 45463.0], [35.0, 45463.0], [35.1, 45464.0], [35.2, 45464.0], [35.3, 45464.0], [35.4, 45464.0], [35.5, 45464.0], [35.6, 45464.0], [35.7, 45464.0], [35.8, 45464.0], [35.9, 45464.0], [36.0, 45464.0], [36.1, 45464.0], [36.2, 45464.0], [36.3, 45464.0], [36.4, 45464.0], [36.5, 45464.0], [36.6, 45464.0], [36.7, 48962.0], [36.8, 48962.0], [36.9, 48962.0], [37.0, 48962.0], [37.1, 48962.0], [37.2, 48962.0], [37.3, 48962.0], [37.4, 48962.0], [37.5, 48962.0], [37.6, 48962.0], [37.7, 48962.0], [37.8, 48962.0], [37.9, 48962.0], [38.0, 48962.0], [38.1, 48962.0], [38.2, 48962.0], [38.3, 48962.0], [38.4, 53453.0], [38.5, 53453.0], [38.6, 53453.0], [38.7, 53453.0], [38.8, 53453.0], [38.9, 53453.0], [39.0, 53453.0], [39.1, 53453.0], [39.2, 53453.0], [39.3, 53453.0], [39.4, 53453.0], [39.5, 53453.0], [39.6, 53453.0], [39.7, 53453.0], [39.8, 53453.0], [39.9, 53453.0], [40.0, 53861.0], [40.1, 53861.0], [40.2, 53861.0], [40.3, 53861.0], [40.4, 53861.0], [40.5, 53861.0], [40.6, 53861.0], [40.7, 53861.0], [40.8, 53861.0], [40.9, 53861.0], [41.0, 53861.0], [41.1, 53861.0], [41.2, 53861.0], [41.3, 53861.0], [41.4, 53861.0], [41.5, 53861.0], [41.6, 53861.0], [41.7, 54469.0], [41.8, 54469.0], [41.9, 54469.0], [42.0, 54469.0], [42.1, 54469.0], [42.2, 54469.0], [42.3, 54469.0], [42.4, 54469.0], [42.5, 54469.0], [42.6, 54469.0], [42.7, 54469.0], [42.8, 54469.0], [42.9, 54469.0], [43.0, 54469.0], [43.1, 54469.0], [43.2, 54469.0], [43.3, 54469.0], [43.4, 55049.0], [43.5, 55049.0], [43.6, 55049.0], [43.7, 55049.0], [43.8, 55049.0], [43.9, 55049.0], [44.0, 55049.0], [44.1, 55049.0], [44.2, 55049.0], [44.3, 55049.0], [44.4, 55049.0], [44.5, 55049.0], [44.6, 55049.0], [44.7, 55049.0], [44.8, 55049.0], [44.9, 55049.0], [45.0, 55320.0], [45.1, 55320.0], [45.2, 55320.0], [45.3, 55320.0], [45.4, 55320.0], [45.5, 55320.0], [45.6, 55320.0], [45.7, 55320.0], [45.8, 55320.0], [45.9, 55320.0], [46.0, 55320.0], [46.1, 55320.0], [46.2, 55320.0], [46.3, 55320.0], [46.4, 55320.0], [46.5, 55320.0], [46.6, 55320.0], [46.7, 55542.0], [46.8, 55542.0], [46.9, 55542.0], [47.0, 55542.0], [47.1, 55542.0], [47.2, 55542.0], [47.3, 55542.0], [47.4, 55542.0], [47.5, 55542.0], [47.6, 55542.0], [47.7, 55542.0], [47.8, 55542.0], [47.9, 55542.0], [48.0, 55542.0], [48.1, 55542.0], [48.2, 55542.0], [48.3, 55542.0], [48.4, 55930.0], [48.5, 55930.0], [48.6, 55930.0], [48.7, 55930.0], [48.8, 55930.0], [48.9, 55930.0], [49.0, 55930.0], [49.1, 55930.0], [49.2, 55930.0], [49.3, 55930.0], [49.4, 55930.0], [49.5, 55930.0], [49.6, 55930.0], [49.7, 55930.0], [49.8, 55930.0], [49.9, 55930.0], [50.0, 56041.0], [50.1, 56041.0], [50.2, 56041.0], [50.3, 56041.0], [50.4, 56041.0], [50.5, 56041.0], [50.6, 56041.0], [50.7, 56041.0], [50.8, 56041.0], [50.9, 56041.0], [51.0, 56041.0], [51.1, 56041.0], [51.2, 56041.0], [51.3, 56041.0], [51.4, 56041.0], [51.5, 56041.0], [51.6, 56041.0], [51.7, 56628.0], [51.8, 56628.0], [51.9, 56628.0], [52.0, 56628.0], [52.1, 56628.0], [52.2, 56628.0], [52.3, 56628.0], [52.4, 56628.0], [52.5, 56628.0], [52.6, 56628.0], [52.7, 56628.0], [52.8, 56628.0], [52.9, 56628.0], [53.0, 56628.0], [53.1, 56628.0], [53.2, 56628.0], [53.3, 56628.0], [53.4, 57171.0], [53.5, 57171.0], [53.6, 57171.0], [53.7, 57171.0], [53.8, 57171.0], [53.9, 57171.0], [54.0, 57171.0], [54.1, 57171.0], [54.2, 57171.0], [54.3, 57171.0], [54.4, 57171.0], [54.5, 57171.0], [54.6, 57171.0], [54.7, 57171.0], [54.8, 57171.0], [54.9, 57171.0], [55.0, 57177.0], [55.1, 57177.0], [55.2, 57177.0], [55.3, 57177.0], [55.4, 57177.0], [55.5, 57177.0], [55.6, 57177.0], [55.7, 57177.0], [55.8, 57177.0], [55.9, 57177.0], [56.0, 57177.0], [56.1, 57177.0], [56.2, 57177.0], [56.3, 57177.0], [56.4, 57177.0], [56.5, 57177.0], [56.6, 57177.0], [56.7, 57206.0], [56.8, 57206.0], [56.9, 57206.0], [57.0, 57206.0], [57.1, 57206.0], [57.2, 57206.0], [57.3, 57206.0], [57.4, 57206.0], [57.5, 57206.0], [57.6, 57206.0], [57.7, 57206.0], [57.8, 57206.0], [57.9, 57206.0], [58.0, 57206.0], [58.1, 57206.0], [58.2, 57206.0], [58.3, 57206.0], [58.4, 57232.0], [58.5, 57232.0], [58.6, 57232.0], [58.7, 57232.0], [58.8, 57232.0], [58.9, 57232.0], [59.0, 57232.0], [59.1, 57232.0], [59.2, 57232.0], [59.3, 57232.0], [59.4, 57232.0], [59.5, 57232.0], [59.6, 57232.0], [59.7, 57232.0], [59.8, 57232.0], [59.9, 57232.0], [60.0, 57260.0], [60.1, 57260.0], [60.2, 57260.0], [60.3, 57260.0], [60.4, 57260.0], [60.5, 57260.0], [60.6, 57260.0], [60.7, 57260.0], [60.8, 57260.0], [60.9, 57260.0], [61.0, 57260.0], [61.1, 57260.0], [61.2, 57260.0], [61.3, 57260.0], [61.4, 57260.0], [61.5, 57260.0], [61.6, 57260.0], [61.7, 57267.0], [61.8, 57267.0], [61.9, 57267.0], [62.0, 57267.0], [62.1, 57267.0], [62.2, 57267.0], [62.3, 57267.0], [62.4, 57267.0], [62.5, 57267.0], [62.6, 57267.0], [62.7, 57267.0], [62.8, 57267.0], [62.9, 57267.0], [63.0, 57267.0], [63.1, 57267.0], [63.2, 57267.0], [63.3, 57267.0], [63.4, 58094.0], [63.5, 58094.0], [63.6, 58094.0], [63.7, 58094.0], [63.8, 58094.0], [63.9, 58094.0], [64.0, 58094.0], [64.1, 58094.0], [64.2, 58094.0], [64.3, 58094.0], [64.4, 58094.0], [64.5, 58094.0], [64.6, 58094.0], [64.7, 58094.0], [64.8, 58094.0], [64.9, 58094.0], [65.0, 58142.0], [65.1, 58142.0], [65.2, 58142.0], [65.3, 58142.0], [65.4, 58142.0], [65.5, 58142.0], [65.6, 58142.0], [65.7, 58142.0], [65.8, 58142.0], [65.9, 58142.0], [66.0, 58142.0], [66.1, 58142.0], [66.2, 58142.0], [66.3, 58142.0], [66.4, 58142.0], [66.5, 58142.0], [66.6, 58142.0], [66.7, 58258.0], [66.8, 58258.0], [66.9, 58258.0], [67.0, 58258.0], [67.1, 58258.0], [67.2, 58258.0], [67.3, 58258.0], [67.4, 58258.0], [67.5, 58258.0], [67.6, 58258.0], [67.7, 58258.0], [67.8, 58258.0], [67.9, 58258.0], [68.0, 58258.0], [68.1, 58258.0], [68.2, 58258.0], [68.3, 58258.0], [68.4, 58332.0], [68.5, 58332.0], [68.6, 58332.0], [68.7, 58332.0], [68.8, 58332.0], [68.9, 58332.0], [69.0, 58332.0], [69.1, 58332.0], [69.2, 58332.0], [69.3, 58332.0], [69.4, 58332.0], [69.5, 58332.0], [69.6, 58332.0], [69.7, 58332.0], [69.8, 58332.0], [69.9, 58332.0], [70.0, 58434.0], [70.1, 58434.0], [70.2, 58434.0], [70.3, 58434.0], [70.4, 58434.0], [70.5, 58434.0], [70.6, 58434.0], [70.7, 58434.0], [70.8, 58434.0], [70.9, 58434.0], [71.0, 58434.0], [71.1, 58434.0], [71.2, 58434.0], [71.3, 58434.0], [71.4, 58434.0], [71.5, 58434.0], [71.6, 58434.0], [71.7, 58483.0], [71.8, 58483.0], [71.9, 58483.0], [72.0, 58483.0], [72.1, 58483.0], [72.2, 58483.0], [72.3, 58483.0], [72.4, 58483.0], [72.5, 58483.0], [72.6, 58483.0], [72.7, 58483.0], [72.8, 58483.0], [72.9, 58483.0], [73.0, 58483.0], [73.1, 58483.0], [73.2, 58483.0], [73.3, 58483.0], [73.4, 58490.0], [73.5, 58490.0], [73.6, 58490.0], [73.7, 58490.0], [73.8, 58490.0], [73.9, 58490.0], [74.0, 58490.0], [74.1, 58490.0], [74.2, 58490.0], [74.3, 58490.0], [74.4, 58490.0], [74.5, 58490.0], [74.6, 58490.0], [74.7, 58490.0], [74.8, 58490.0], [74.9, 58490.0], [75.0, 58503.0], [75.1, 58503.0], [75.2, 58503.0], [75.3, 58503.0], [75.4, 58503.0], [75.5, 58503.0], [75.6, 58503.0], [75.7, 58503.0], [75.8, 58503.0], [75.9, 58503.0], [76.0, 58503.0], [76.1, 58503.0], [76.2, 58503.0], [76.3, 58503.0], [76.4, 58503.0], [76.5, 58503.0], [76.6, 58503.0], [76.7, 58609.0], [76.8, 58609.0], [76.9, 58609.0], [77.0, 58609.0], [77.1, 58609.0], [77.2, 58609.0], [77.3, 58609.0], [77.4, 58609.0], [77.5, 58609.0], [77.6, 58609.0], [77.7, 58609.0], [77.8, 58609.0], [77.9, 58609.0], [78.0, 58609.0], [78.1, 58609.0], [78.2, 58609.0], [78.3, 58609.0], [78.4, 58614.0], [78.5, 58614.0], [78.6, 58614.0], [78.7, 58614.0], [78.8, 58614.0], [78.9, 58614.0], [79.0, 58614.0], [79.1, 58614.0], [79.2, 58614.0], [79.3, 58614.0], [79.4, 58614.0], [79.5, 58614.0], [79.6, 58614.0], [79.7, 58614.0], [79.8, 58614.0], [79.9, 58614.0], [80.0, 58614.0], [80.1, 58742.0], [80.2, 58742.0], [80.3, 58742.0], [80.4, 58742.0], [80.5, 58742.0], [80.6, 58742.0], [80.7, 58742.0], [80.8, 58742.0], [80.9, 58742.0], [81.0, 58742.0], [81.1, 58742.0], [81.2, 58742.0], [81.3, 58742.0], [81.4, 58742.0], [81.5, 58742.0], [81.6, 58742.0], [81.7, 58854.0], [81.8, 58854.0], [81.9, 58854.0], [82.0, 58854.0], [82.1, 58854.0], [82.2, 58854.0], [82.3, 58854.0], [82.4, 58854.0], [82.5, 58854.0], [82.6, 58854.0], [82.7, 58854.0], [82.8, 58854.0], [82.9, 58854.0], [83.0, 58854.0], [83.1, 58854.0], [83.2, 58854.0], [83.3, 58854.0], [83.4, 59012.0], [83.5, 59012.0], [83.6, 59012.0], [83.7, 59012.0], [83.8, 59012.0], [83.9, 59012.0], [84.0, 59012.0], [84.1, 59012.0], [84.2, 59012.0], [84.3, 59012.0], [84.4, 59012.0], [84.5, 59012.0], [84.6, 59012.0], [84.7, 59012.0], [84.8, 59012.0], [84.9, 59012.0], [85.0, 59012.0], [85.1, 59211.0], [85.2, 59211.0], [85.3, 59211.0], [85.4, 59211.0], [85.5, 59211.0], [85.6, 59211.0], [85.7, 59211.0], [85.8, 59211.0], [85.9, 59211.0], [86.0, 59211.0], [86.1, 59211.0], [86.2, 59211.0], [86.3, 59211.0], [86.4, 59211.0], [86.5, 59211.0], [86.6, 59211.0], [86.7, 59273.0], [86.8, 59273.0], [86.9, 59273.0], [87.0, 59273.0], [87.1, 59273.0], [87.2, 59273.0], [87.3, 59273.0], [87.4, 59273.0], [87.5, 59273.0], [87.6, 59273.0], [87.7, 59273.0], [87.8, 59273.0], [87.9, 59273.0], [88.0, 59273.0], [88.1, 59273.0], [88.2, 59273.0], [88.3, 59273.0], [88.4, 59333.0], [88.5, 59333.0], [88.6, 59333.0], [88.7, 59333.0], [88.8, 59333.0], [88.9, 59333.0], [89.0, 59333.0], [89.1, 59333.0], [89.2, 59333.0], [89.3, 59333.0], [89.4, 59333.0], [89.5, 59333.0], [89.6, 59333.0], [89.7, 59333.0], [89.8, 59333.0], [89.9, 59333.0], [90.0, 59333.0], [90.1, 59395.0], [90.2, 59395.0], [90.3, 59395.0], [90.4, 59395.0], [90.5, 59395.0], [90.6, 59395.0], [90.7, 59395.0], [90.8, 59395.0], [90.9, 59395.0], [91.0, 59395.0], [91.1, 59395.0], [91.2, 59395.0], [91.3, 59395.0], [91.4, 59395.0], [91.5, 59395.0], [91.6, 59395.0], [91.7, 59508.0], [91.8, 59508.0], [91.9, 59508.0], [92.0, 59508.0], [92.1, 59508.0], [92.2, 59508.0], [92.3, 59508.0], [92.4, 59508.0], [92.5, 59508.0], [92.6, 59508.0], [92.7, 59508.0], [92.8, 59508.0], [92.9, 59508.0], [93.0, 59508.0], [93.1, 59508.0], [93.2, 59508.0], [93.3, 59508.0], [93.4, 59609.0], [93.5, 59609.0], [93.6, 59609.0], [93.7, 59609.0], [93.8, 59609.0], [93.9, 59609.0], [94.0, 59609.0], [94.1, 59609.0], [94.2, 59609.0], [94.3, 59609.0], [94.4, 59609.0], [94.5, 59609.0], [94.6, 59609.0], [94.7, 59609.0], [94.8, 59609.0], [94.9, 59609.0], [95.0, 59609.0], [95.1, 59724.0], [95.2, 59724.0], [95.3, 59724.0], [95.4, 59724.0], [95.5, 59724.0], [95.6, 59724.0], [95.7, 59724.0], [95.8, 59724.0], [95.9, 59724.0], [96.0, 59724.0], [96.1, 59724.0], [96.2, 59724.0], [96.3, 59724.0], [96.4, 59724.0], [96.5, 59724.0], [96.6, 59724.0], [96.7, 59922.0], [96.8, 59922.0], [96.9, 59922.0], [97.0, 59922.0], [97.1, 59922.0], [97.2, 59922.0], [97.3, 59922.0], [97.4, 59922.0], [97.5, 59922.0], [97.6, 59922.0], [97.7, 59922.0], [97.8, 59922.0], [97.9, 59922.0], [98.0, 59922.0], [98.1, 59922.0], [98.2, 59922.0], [98.3, 59922.0], [98.4, 60026.0], [98.5, 60026.0], [98.6, 60026.0], [98.7, 60026.0], [98.8, 60026.0], [98.9, 60026.0], [99.0, 60026.0], [99.1, 60026.0], [99.2, 60026.0], [99.3, 60026.0], [99.4, 60026.0], [99.5, 60026.0], [99.6, 60026.0], [99.7, 60026.0], [99.8, 60026.0], [99.9, 60026.0], [100.0, 60026.0]], "isOverall": false, "label": "getAllUserGrants", "isController": false}, {"data": [[0.0, 22251.0], [0.1, 22251.0], [0.2, 22251.0], [0.3, 22251.0], [0.4, 22251.0], [0.5, 22251.0], [0.6, 22251.0], [0.7, 22251.0], [0.8, 22251.0], [0.9, 22251.0], [1.0, 22251.0], [1.1, 22251.0], [1.2, 22251.0], [1.3, 22251.0], [1.4, 22251.0], [1.5, 22251.0], [1.6, 22251.0], [1.7, 27425.0], [1.8, 27425.0], [1.9, 27425.0], [2.0, 27425.0], [2.1, 27425.0], [2.2, 27425.0], [2.3, 27425.0], [2.4, 27425.0], [2.5, 27425.0], [2.6, 27425.0], [2.7, 27425.0], [2.8, 27425.0], [2.9, 27425.0], [3.0, 27425.0], [3.1, 27425.0], [3.2, 27425.0], [3.3, 27425.0], [3.4, 27446.0], [3.5, 27446.0], [3.6, 27446.0], [3.7, 27446.0], [3.8, 27446.0], [3.9, 27446.0], [4.0, 27446.0], [4.1, 27446.0], [4.2, 27446.0], [4.3, 27446.0], [4.4, 27446.0], [4.5, 27446.0], [4.6, 27446.0], [4.7, 27446.0], [4.8, 27446.0], [4.9, 27446.0], [5.0, 27967.0], [5.1, 27967.0], [5.2, 27967.0], [5.3, 27967.0], [5.4, 27967.0], [5.5, 27967.0], [5.6, 27967.0], [5.7, 27967.0], [5.8, 27967.0], [5.9, 27967.0], [6.0, 27967.0], [6.1, 27967.0], [6.2, 27967.0], [6.3, 27967.0], [6.4, 27967.0], [6.5, 27967.0], [6.6, 27967.0], [6.7, 32126.0], [6.8, 32126.0], [6.9, 32126.0], [7.0, 32126.0], [7.1, 32126.0], [7.2, 32126.0], [7.3, 32126.0], [7.4, 32126.0], [7.5, 32126.0], [7.6, 32126.0], [7.7, 32126.0], [7.8, 32126.0], [7.9, 32126.0], [8.0, 32126.0], [8.1, 32126.0], [8.2, 32126.0], [8.3, 32126.0], [8.4, 38476.0], [8.5, 38476.0], [8.6, 38476.0], [8.7, 38476.0], [8.8, 38476.0], [8.9, 38476.0], [9.0, 38476.0], [9.1, 38476.0], [9.2, 38476.0], [9.3, 38476.0], [9.4, 38476.0], [9.5, 38476.0], [9.6, 38476.0], [9.7, 38476.0], [9.8, 38476.0], [9.9, 38476.0], [10.0, 43859.0], [10.1, 43859.0], [10.2, 43859.0], [10.3, 43859.0], [10.4, 43859.0], [10.5, 43859.0], [10.6, 43859.0], [10.7, 43859.0], [10.8, 43859.0], [10.9, 43859.0], [11.0, 43859.0], [11.1, 43859.0], [11.2, 43859.0], [11.3, 43859.0], [11.4, 43859.0], [11.5, 43859.0], [11.6, 43859.0], [11.7, 45585.0], [11.8, 45585.0], [11.9, 45585.0], [12.0, 45585.0], [12.1, 45585.0], [12.2, 45585.0], [12.3, 45585.0], [12.4, 45585.0], [12.5, 45585.0], [12.6, 45585.0], [12.7, 45585.0], [12.8, 45585.0], [12.9, 45585.0], [13.0, 45585.0], [13.1, 45585.0], [13.2, 45585.0], [13.3, 45585.0], [13.4, 46414.0], [13.5, 46414.0], [13.6, 46414.0], [13.7, 46414.0], [13.8, 46414.0], [13.9, 46414.0], [14.0, 46414.0], [14.1, 46414.0], [14.2, 46414.0], [14.3, 46414.0], [14.4, 46414.0], [14.5, 46414.0], [14.6, 46414.0], [14.7, 46414.0], [14.8, 46414.0], [14.9, 46414.0], [15.0, 46871.0], [15.1, 46871.0], [15.2, 46871.0], [15.3, 46871.0], [15.4, 46871.0], [15.5, 46871.0], [15.6, 46871.0], [15.7, 46871.0], [15.8, 46871.0], [15.9, 46871.0], [16.0, 46871.0], [16.1, 46871.0], [16.2, 46871.0], [16.3, 46871.0], [16.4, 46871.0], [16.5, 46871.0], [16.6, 46871.0], [16.7, 47570.0], [16.8, 47570.0], [16.9, 47570.0], [17.0, 47570.0], [17.1, 47570.0], [17.2, 47570.0], [17.3, 47570.0], [17.4, 47570.0], [17.5, 47570.0], [17.6, 47570.0], [17.7, 47570.0], [17.8, 47570.0], [17.9, 47570.0], [18.0, 47570.0], [18.1, 47570.0], [18.2, 47570.0], [18.3, 47570.0], [18.4, 47787.0], [18.5, 47787.0], [18.6, 47787.0], [18.7, 47787.0], [18.8, 47787.0], [18.9, 47787.0], [19.0, 47787.0], [19.1, 47787.0], [19.2, 47787.0], [19.3, 47787.0], [19.4, 47787.0], [19.5, 47787.0], [19.6, 47787.0], [19.7, 47787.0], [19.8, 47787.0], [19.9, 47787.0], [20.0, 47832.0], [20.1, 47832.0], [20.2, 47832.0], [20.3, 47832.0], [20.4, 47832.0], [20.5, 47832.0], [20.6, 47832.0], [20.7, 47832.0], [20.8, 47832.0], [20.9, 47832.0], [21.0, 47832.0], [21.1, 47832.0], [21.2, 47832.0], [21.3, 47832.0], [21.4, 47832.0], [21.5, 47832.0], [21.6, 47832.0], [21.7, 48146.0], [21.8, 48146.0], [21.9, 48146.0], [22.0, 48146.0], [22.1, 48146.0], [22.2, 48146.0], [22.3, 48146.0], [22.4, 48146.0], [22.5, 48146.0], [22.6, 48146.0], [22.7, 48146.0], [22.8, 48146.0], [22.9, 48146.0], [23.0, 48146.0], [23.1, 48146.0], [23.2, 48146.0], [23.3, 48146.0], [23.4, 49668.0], [23.5, 49668.0], [23.6, 49668.0], [23.7, 49668.0], [23.8, 49668.0], [23.9, 49668.0], [24.0, 49668.0], [24.1, 49668.0], [24.2, 49668.0], [24.3, 49668.0], [24.4, 49668.0], [24.5, 49668.0], [24.6, 49668.0], [24.7, 49668.0], [24.8, 49668.0], [24.9, 49668.0], [25.0, 49668.0], [25.1, 50207.0], [25.2, 50207.0], [25.3, 50207.0], [25.4, 50207.0], [25.5, 50207.0], [25.6, 50207.0], [25.7, 50207.0], [25.8, 50207.0], [25.9, 50207.0], [26.0, 50207.0], [26.1, 50207.0], [26.2, 50207.0], [26.3, 50207.0], [26.4, 50207.0], [26.5, 50207.0], [26.6, 50207.0], [26.7, 51593.0], [26.8, 51593.0], [26.9, 51593.0], [27.0, 51593.0], [27.1, 51593.0], [27.2, 51593.0], [27.3, 51593.0], [27.4, 51593.0], [27.5, 51593.0], [27.6, 51593.0], [27.7, 51593.0], [27.8, 51593.0], [27.9, 51593.0], [28.0, 51593.0], [28.1, 51593.0], [28.2, 51593.0], [28.3, 51593.0], [28.4, 51734.0], [28.5, 51734.0], [28.6, 51734.0], [28.7, 51734.0], [28.8, 51734.0], [28.9, 51734.0], [29.0, 51734.0], [29.1, 51734.0], [29.2, 51734.0], [29.3, 51734.0], [29.4, 51734.0], [29.5, 51734.0], [29.6, 51734.0], [29.7, 51734.0], [29.8, 51734.0], [29.9, 51734.0], [30.0, 51734.0], [30.1, 52633.0], [30.2, 52633.0], [30.3, 52633.0], [30.4, 52633.0], [30.5, 52633.0], [30.6, 52633.0], [30.7, 52633.0], [30.8, 52633.0], [30.9, 52633.0], [31.0, 52633.0], [31.1, 52633.0], [31.2, 52633.0], [31.3, 52633.0], [31.4, 52633.0], [31.5, 52633.0], [31.6, 52633.0], [31.7, 53009.0], [31.8, 53009.0], [31.9, 53009.0], [32.0, 53009.0], [32.1, 53009.0], [32.2, 53009.0], [32.3, 53009.0], [32.4, 53009.0], [32.5, 53009.0], [32.6, 53009.0], [32.7, 53009.0], [32.8, 53009.0], [32.9, 53009.0], [33.0, 53009.0], [33.1, 53009.0], [33.2, 53009.0], [33.3, 53009.0], [33.4, 56040.0], [33.5, 56040.0], [33.6, 56040.0], [33.7, 56040.0], [33.8, 56040.0], [33.9, 56040.0], [34.0, 56040.0], [34.1, 56040.0], [34.2, 56040.0], [34.3, 56040.0], [34.4, 56040.0], [34.5, 56040.0], [34.6, 56040.0], [34.7, 56040.0], [34.8, 56040.0], [34.9, 56040.0], [35.0, 56040.0], [35.1, 56382.0], [35.2, 56382.0], [35.3, 56382.0], [35.4, 56382.0], [35.5, 56382.0], [35.6, 56382.0], [35.7, 56382.0], [35.8, 56382.0], [35.9, 56382.0], [36.0, 56382.0], [36.1, 56382.0], [36.2, 56382.0], [36.3, 56382.0], [36.4, 56382.0], [36.5, 56382.0], [36.6, 56382.0], [36.7, 57771.0], [36.8, 57771.0], [36.9, 57771.0], [37.0, 57771.0], [37.1, 57771.0], [37.2, 57771.0], [37.3, 57771.0], [37.4, 57771.0], [37.5, 57771.0], [37.6, 57771.0], [37.7, 57771.0], [37.8, 57771.0], [37.9, 57771.0], [38.0, 57771.0], [38.1, 57771.0], [38.2, 57771.0], [38.3, 57771.0], [38.4, 58973.0], [38.5, 58973.0], [38.6, 58973.0], [38.7, 58973.0], [38.8, 58973.0], [38.9, 58973.0], [39.0, 58973.0], [39.1, 58973.0], [39.2, 58973.0], [39.3, 58973.0], [39.4, 58973.0], [39.5, 58973.0], [39.6, 58973.0], [39.7, 58973.0], [39.8, 58973.0], [39.9, 58973.0], [40.0, 63120.0], [40.1, 63120.0], [40.2, 63120.0], [40.3, 63120.0], [40.4, 63120.0], [40.5, 63120.0], [40.6, 63120.0], [40.7, 63120.0], [40.8, 63120.0], [40.9, 63120.0], [41.0, 63120.0], [41.1, 63120.0], [41.2, 63120.0], [41.3, 63120.0], [41.4, 63120.0], [41.5, 63120.0], [41.6, 63120.0], [41.7, 63176.0], [41.8, 63176.0], [41.9, 63176.0], [42.0, 63176.0], [42.1, 63176.0], [42.2, 63176.0], [42.3, 63176.0], [42.4, 63176.0], [42.5, 63176.0], [42.6, 63176.0], [42.7, 63176.0], [42.8, 63176.0], [42.9, 63176.0], [43.0, 63176.0], [43.1, 63176.0], [43.2, 63176.0], [43.3, 63176.0], [43.4, 63644.0], [43.5, 63644.0], [43.6, 63644.0], [43.7, 63644.0], [43.8, 63644.0], [43.9, 63644.0], [44.0, 63644.0], [44.1, 63644.0], [44.2, 63644.0], [44.3, 63644.0], [44.4, 63644.0], [44.5, 63644.0], [44.6, 63644.0], [44.7, 63644.0], [44.8, 63644.0], [44.9, 63644.0], [45.0, 63766.0], [45.1, 63766.0], [45.2, 63766.0], [45.3, 63766.0], [45.4, 63766.0], [45.5, 63766.0], [45.6, 63766.0], [45.7, 63766.0], [45.8, 63766.0], [45.9, 63766.0], [46.0, 63766.0], [46.1, 63766.0], [46.2, 63766.0], [46.3, 63766.0], [46.4, 63766.0], [46.5, 63766.0], [46.6, 63766.0], [46.7, 64481.0], [46.8, 64481.0], [46.9, 64481.0], [47.0, 64481.0], [47.1, 64481.0], [47.2, 64481.0], [47.3, 64481.0], [47.4, 64481.0], [47.5, 64481.0], [47.6, 64481.0], [47.7, 64481.0], [47.8, 64481.0], [47.9, 64481.0], [48.0, 64481.0], [48.1, 64481.0], [48.2, 64481.0], [48.3, 64481.0], [48.4, 65580.0], [48.5, 65580.0], [48.6, 65580.0], [48.7, 65580.0], [48.8, 65580.0], [48.9, 65580.0], [49.0, 65580.0], [49.1, 65580.0], [49.2, 65580.0], [49.3, 65580.0], [49.4, 65580.0], [49.5, 65580.0], [49.6, 65580.0], [49.7, 65580.0], [49.8, 65580.0], [49.9, 65580.0], [50.0, 65881.0], [50.1, 65881.0], [50.2, 65881.0], [50.3, 65881.0], [50.4, 65881.0], [50.5, 65881.0], [50.6, 65881.0], [50.7, 65881.0], [50.8, 65881.0], [50.9, 65881.0], [51.0, 65881.0], [51.1, 65881.0], [51.2, 65881.0], [51.3, 65881.0], [51.4, 65881.0], [51.5, 65881.0], [51.6, 65881.0], [51.7, 66854.0], [51.8, 66854.0], [51.9, 66854.0], [52.0, 66854.0], [52.1, 66854.0], [52.2, 66854.0], [52.3, 66854.0], [52.4, 66854.0], [52.5, 66854.0], [52.6, 66854.0], [52.7, 66854.0], [52.8, 66854.0], [52.9, 66854.0], [53.0, 66854.0], [53.1, 66854.0], [53.2, 66854.0], [53.3, 66854.0], [53.4, 66903.0], [53.5, 66903.0], [53.6, 66903.0], [53.7, 66903.0], [53.8, 66903.0], [53.9, 66903.0], [54.0, 66903.0], [54.1, 66903.0], [54.2, 66903.0], [54.3, 66903.0], [54.4, 66903.0], [54.5, 66903.0], [54.6, 66903.0], [54.7, 66903.0], [54.8, 66903.0], [54.9, 66903.0], [55.0, 67421.0], [55.1, 67421.0], [55.2, 67421.0], [55.3, 67421.0], [55.4, 67421.0], [55.5, 67421.0], [55.6, 67421.0], [55.7, 67421.0], [55.8, 67421.0], [55.9, 67421.0], [56.0, 67421.0], [56.1, 67421.0], [56.2, 67421.0], [56.3, 67421.0], [56.4, 67421.0], [56.5, 67421.0], [56.6, 67421.0], [56.7, 67657.0], [56.8, 67657.0], [56.9, 67657.0], [57.0, 67657.0], [57.1, 67657.0], [57.2, 67657.0], [57.3, 67657.0], [57.4, 67657.0], [57.5, 67657.0], [57.6, 67657.0], [57.7, 67657.0], [57.8, 67657.0], [57.9, 67657.0], [58.0, 67657.0], [58.1, 67657.0], [58.2, 67657.0], [58.3, 67657.0], [58.4, 67784.0], [58.5, 67784.0], [58.6, 67784.0], [58.7, 67784.0], [58.8, 67784.0], [58.9, 67784.0], [59.0, 67784.0], [59.1, 67784.0], [59.2, 67784.0], [59.3, 67784.0], [59.4, 67784.0], [59.5, 67784.0], [59.6, 67784.0], [59.7, 67784.0], [59.8, 67784.0], [59.9, 67784.0], [60.0, 67850.0], [60.1, 67850.0], [60.2, 67850.0], [60.3, 67850.0], [60.4, 67850.0], [60.5, 67850.0], [60.6, 67850.0], [60.7, 67850.0], [60.8, 67850.0], [60.9, 67850.0], [61.0, 67850.0], [61.1, 67850.0], [61.2, 67850.0], [61.3, 67850.0], [61.4, 67850.0], [61.5, 67850.0], [61.6, 67850.0], [61.7, 68046.0], [61.8, 68046.0], [61.9, 68046.0], [62.0, 68046.0], [62.1, 68046.0], [62.2, 68046.0], [62.3, 68046.0], [62.4, 68046.0], [62.5, 68046.0], [62.6, 68046.0], [62.7, 68046.0], [62.8, 68046.0], [62.9, 68046.0], [63.0, 68046.0], [63.1, 68046.0], [63.2, 68046.0], [63.3, 68046.0], [63.4, 68074.0], [63.5, 68074.0], [63.6, 68074.0], [63.7, 68074.0], [63.8, 68074.0], [63.9, 68074.0], [64.0, 68074.0], [64.1, 68074.0], [64.2, 68074.0], [64.3, 68074.0], [64.4, 68074.0], [64.5, 68074.0], [64.6, 68074.0], [64.7, 68074.0], [64.8, 68074.0], [64.9, 68074.0], [65.0, 68998.0], [65.1, 68998.0], [65.2, 68998.0], [65.3, 68998.0], [65.4, 68998.0], [65.5, 68998.0], [65.6, 68998.0], [65.7, 68998.0], [65.8, 68998.0], [65.9, 68998.0], [66.0, 68998.0], [66.1, 68998.0], [66.2, 68998.0], [66.3, 68998.0], [66.4, 68998.0], [66.5, 68998.0], [66.6, 68998.0], [66.7, 69627.0], [66.8, 69627.0], [66.9, 69627.0], [67.0, 69627.0], [67.1, 69627.0], [67.2, 69627.0], [67.3, 69627.0], [67.4, 69627.0], [67.5, 69627.0], [67.6, 69627.0], [67.7, 69627.0], [67.8, 69627.0], [67.9, 69627.0], [68.0, 69627.0], [68.1, 69627.0], [68.2, 69627.0], [68.3, 69627.0], [68.4, 69920.0], [68.5, 69920.0], [68.6, 69920.0], [68.7, 69920.0], [68.8, 69920.0], [68.9, 69920.0], [69.0, 69920.0], [69.1, 69920.0], [69.2, 69920.0], [69.3, 69920.0], [69.4, 69920.0], [69.5, 69920.0], [69.6, 69920.0], [69.7, 69920.0], [69.8, 69920.0], [69.9, 69920.0], [70.0, 69939.0], [70.1, 69939.0], [70.2, 69939.0], [70.3, 69939.0], [70.4, 69939.0], [70.5, 69939.0], [70.6, 69939.0], [70.7, 69939.0], [70.8, 69939.0], [70.9, 69939.0], [71.0, 69939.0], [71.1, 69939.0], [71.2, 69939.0], [71.3, 69939.0], [71.4, 69939.0], [71.5, 69939.0], [71.6, 69939.0], [71.7, 69949.0], [71.8, 69949.0], [71.9, 69949.0], [72.0, 69949.0], [72.1, 69949.0], [72.2, 69949.0], [72.3, 69949.0], [72.4, 69949.0], [72.5, 69949.0], [72.6, 69949.0], [72.7, 69949.0], [72.8, 69949.0], [72.9, 69949.0], [73.0, 69949.0], [73.1, 69949.0], [73.2, 69949.0], [73.3, 69949.0], [73.4, 70179.0], [73.5, 70179.0], [73.6, 70179.0], [73.7, 70179.0], [73.8, 70179.0], [73.9, 70179.0], [74.0, 70179.0], [74.1, 70179.0], [74.2, 70179.0], [74.3, 70179.0], [74.4, 70179.0], [74.5, 70179.0], [74.6, 70179.0], [74.7, 70179.0], [74.8, 70179.0], [74.9, 70179.0], [75.0, 70350.0], [75.1, 70350.0], [75.2, 70350.0], [75.3, 70350.0], [75.4, 70350.0], [75.5, 70350.0], [75.6, 70350.0], [75.7, 70350.0], [75.8, 70350.0], [75.9, 70350.0], [76.0, 70350.0], [76.1, 70350.0], [76.2, 70350.0], [76.3, 70350.0], [76.4, 70350.0], [76.5, 70350.0], [76.6, 70350.0], [76.7, 70478.0], [76.8, 70478.0], [76.9, 70478.0], [77.0, 70478.0], [77.1, 70478.0], [77.2, 70478.0], [77.3, 70478.0], [77.4, 70478.0], [77.5, 70478.0], [77.6, 70478.0], [77.7, 70478.0], [77.8, 70478.0], [77.9, 70478.0], [78.0, 70478.0], [78.1, 70478.0], [78.2, 70478.0], [78.3, 70478.0], [78.4, 70503.0], [78.5, 70503.0], [78.6, 70503.0], [78.7, 70503.0], [78.8, 70503.0], [78.9, 70503.0], [79.0, 70503.0], [79.1, 70503.0], [79.2, 70503.0], [79.3, 70503.0], [79.4, 70503.0], [79.5, 70503.0], [79.6, 70503.0], [79.7, 70503.0], [79.8, 70503.0], [79.9, 70503.0], [80.0, 70503.0], [80.1, 71141.0], [80.2, 71141.0], [80.3, 71141.0], [80.4, 71141.0], [80.5, 71141.0], [80.6, 71141.0], [80.7, 71141.0], [80.8, 71141.0], [80.9, 71141.0], [81.0, 71141.0], [81.1, 71141.0], [81.2, 71141.0], [81.3, 71141.0], [81.4, 71141.0], [81.5, 71141.0], [81.6, 71141.0], [81.7, 71407.0], [81.8, 71407.0], [81.9, 71407.0], [82.0, 71407.0], [82.1, 71407.0], [82.2, 71407.0], [82.3, 71407.0], [82.4, 71407.0], [82.5, 71407.0], [82.6, 71407.0], [82.7, 71407.0], [82.8, 71407.0], [82.9, 71407.0], [83.0, 71407.0], [83.1, 71407.0], [83.2, 71407.0], [83.3, 71407.0], [83.4, 71953.0], [83.5, 71953.0], [83.6, 71953.0], [83.7, 71953.0], [83.8, 71953.0], [83.9, 71953.0], [84.0, 71953.0], [84.1, 71953.0], [84.2, 71953.0], [84.3, 71953.0], [84.4, 71953.0], [84.5, 71953.0], [84.6, 71953.0], [84.7, 71953.0], [84.8, 71953.0], [84.9, 71953.0], [85.0, 71953.0], [85.1, 72433.0], [85.2, 72433.0], [85.3, 72433.0], [85.4, 72433.0], [85.5, 72433.0], [85.6, 72433.0], [85.7, 72433.0], [85.8, 72433.0], [85.9, 72433.0], [86.0, 72433.0], [86.1, 72433.0], [86.2, 72433.0], [86.3, 72433.0], [86.4, 72433.0], [86.5, 72433.0], [86.6, 72433.0], [86.7, 72874.0], [86.8, 72874.0], [86.9, 72874.0], [87.0, 72874.0], [87.1, 72874.0], [87.2, 72874.0], [87.3, 72874.0], [87.4, 72874.0], [87.5, 72874.0], [87.6, 72874.0], [87.7, 72874.0], [87.8, 72874.0], [87.9, 72874.0], [88.0, 72874.0], [88.1, 72874.0], [88.2, 72874.0], [88.3, 72874.0], [88.4, 73332.0], [88.5, 73332.0], [88.6, 73332.0], [88.7, 73332.0], [88.8, 73332.0], [88.9, 73332.0], [89.0, 73332.0], [89.1, 73332.0], [89.2, 73332.0], [89.3, 73332.0], [89.4, 73332.0], [89.5, 73332.0], [89.6, 73332.0], [89.7, 73332.0], [89.8, 73332.0], [89.9, 73332.0], [90.0, 73332.0], [90.1, 73558.0], [90.2, 73558.0], [90.3, 73558.0], [90.4, 73558.0], [90.5, 73558.0], [90.6, 73558.0], [90.7, 73558.0], [90.8, 73558.0], [90.9, 73558.0], [91.0, 73558.0], [91.1, 73558.0], [91.2, 73558.0], [91.3, 73558.0], [91.4, 73558.0], [91.5, 73558.0], [91.6, 73558.0], [91.7, 73872.0], [91.8, 73872.0], [91.9, 73872.0], [92.0, 73872.0], [92.1, 73872.0], [92.2, 73872.0], [92.3, 73872.0], [92.4, 73872.0], [92.5, 73872.0], [92.6, 73872.0], [92.7, 73872.0], [92.8, 73872.0], [92.9, 73872.0], [93.0, 73872.0], [93.1, 73872.0], [93.2, 73872.0], [93.3, 73872.0], [93.4, 74949.0], [93.5, 74949.0], [93.6, 74949.0], [93.7, 74949.0], [93.8, 74949.0], [93.9, 74949.0], [94.0, 74949.0], [94.1, 74949.0], [94.2, 74949.0], [94.3, 74949.0], [94.4, 74949.0], [94.5, 74949.0], [94.6, 74949.0], [94.7, 74949.0], [94.8, 74949.0], [94.9, 74949.0], [95.0, 74949.0], [95.1, 75194.0], [95.2, 75194.0], [95.3, 75194.0], [95.4, 75194.0], [95.5, 75194.0], [95.6, 75194.0], [95.7, 75194.0], [95.8, 75194.0], [95.9, 75194.0], [96.0, 75194.0], [96.1, 75194.0], [96.2, 75194.0], [96.3, 75194.0], [96.4, 75194.0], [96.5, 75194.0], [96.6, 75194.0], [96.7, 75325.0], [96.8, 75325.0], [96.9, 75325.0], [97.0, 75325.0], [97.1, 75325.0], [97.2, 75325.0], [97.3, 75325.0], [97.4, 75325.0], [97.5, 75325.0], [97.6, 75325.0], [97.7, 75325.0], [97.8, 75325.0], [97.9, 75325.0], [98.0, 75325.0], [98.1, 75325.0], [98.2, 75325.0], [98.3, 75325.0], [98.4, 79371.0], [98.5, 79371.0], [98.6, 79371.0], [98.7, 79371.0], [98.8, 79371.0], [98.9, 79371.0], [99.0, 79371.0], [99.1, 79371.0], [99.2, 79371.0], [99.3, 79371.0], [99.4, 79371.0], [99.5, 79371.0], [99.6, 79371.0], [99.7, 79371.0], [99.8, 79371.0], [99.9, 79371.0], [100.0, 79371.0]], "isOverall": false, "label": "getAllModules", "isController": false}, {"data": [[0.0, 248.0], [0.1, 248.0], [0.2, 248.0], [0.3, 248.0], [0.4, 248.0], [0.5, 248.0], [0.6, 248.0], [0.7, 248.0], [0.8, 248.0], [0.9, 248.0], [1.0, 248.0], [1.1, 248.0], [1.2, 248.0], [1.3, 248.0], [1.4, 248.0], [1.5, 248.0], [1.6, 248.0], [1.7, 291.0], [1.8, 291.0], [1.9, 291.0], [2.0, 291.0], [2.1, 291.0], [2.2, 291.0], [2.3, 291.0], [2.4, 291.0], [2.5, 291.0], [2.6, 291.0], [2.7, 291.0], [2.8, 291.0], [2.9, 291.0], [3.0, 291.0], [3.1, 291.0], [3.2, 291.0], [3.3, 291.0], [3.4, 293.0], [3.5, 293.0], [3.6, 293.0], [3.7, 293.0], [3.8, 293.0], [3.9, 293.0], [4.0, 293.0], [4.1, 293.0], [4.2, 293.0], [4.3, 293.0], [4.4, 293.0], [4.5, 293.0], [4.6, 293.0], [4.7, 293.0], [4.8, 293.0], [4.9, 293.0], [5.0, 383.0], [5.1, 383.0], [5.2, 383.0], [5.3, 383.0], [5.4, 383.0], [5.5, 383.0], [5.6, 383.0], [5.7, 383.0], [5.8, 383.0], [5.9, 383.0], [6.0, 383.0], [6.1, 383.0], [6.2, 383.0], [6.3, 383.0], [6.4, 383.0], [6.5, 383.0], [6.6, 383.0], [6.7, 389.0], [6.8, 389.0], [6.9, 389.0], [7.0, 389.0], [7.1, 389.0], [7.2, 389.0], [7.3, 389.0], [7.4, 389.0], [7.5, 389.0], [7.6, 389.0], [7.7, 389.0], [7.8, 389.0], [7.9, 389.0], [8.0, 389.0], [8.1, 389.0], [8.2, 389.0], [8.3, 389.0], [8.4, 390.0], [8.5, 390.0], [8.6, 390.0], [8.7, 390.0], [8.8, 390.0], [8.9, 390.0], [9.0, 390.0], [9.1, 390.0], [9.2, 390.0], [9.3, 390.0], [9.4, 390.0], [9.5, 390.0], [9.6, 390.0], [9.7, 390.0], [9.8, 390.0], [9.9, 390.0], [10.0, 396.0], [10.1, 396.0], [10.2, 396.0], [10.3, 396.0], [10.4, 396.0], [10.5, 396.0], [10.6, 396.0], [10.7, 396.0], [10.8, 396.0], [10.9, 396.0], [11.0, 396.0], [11.1, 396.0], [11.2, 396.0], [11.3, 396.0], [11.4, 396.0], [11.5, 396.0], [11.6, 396.0], [11.7, 400.0], [11.8, 400.0], [11.9, 400.0], [12.0, 400.0], [12.1, 400.0], [12.2, 400.0], [12.3, 400.0], [12.4, 400.0], [12.5, 400.0], [12.6, 400.0], [12.7, 400.0], [12.8, 400.0], [12.9, 400.0], [13.0, 400.0], [13.1, 400.0], [13.2, 400.0], [13.3, 400.0], [13.4, 405.0], [13.5, 405.0], [13.6, 405.0], [13.7, 405.0], [13.8, 405.0], [13.9, 405.0], [14.0, 405.0], [14.1, 405.0], [14.2, 405.0], [14.3, 405.0], [14.4, 405.0], [14.5, 405.0], [14.6, 405.0], [14.7, 405.0], [14.8, 405.0], [14.9, 405.0], [15.0, 405.0], [15.1, 405.0], [15.2, 405.0], [15.3, 405.0], [15.4, 405.0], [15.5, 405.0], [15.6, 405.0], [15.7, 405.0], [15.8, 405.0], [15.9, 405.0], [16.0, 405.0], [16.1, 405.0], [16.2, 405.0], [16.3, 405.0], [16.4, 405.0], [16.5, 405.0], [16.6, 405.0], [16.7, 406.0], [16.8, 406.0], [16.9, 406.0], [17.0, 406.0], [17.1, 406.0], [17.2, 406.0], [17.3, 406.0], [17.4, 406.0], [17.5, 406.0], [17.6, 406.0], [17.7, 406.0], [17.8, 406.0], [17.9, 406.0], [18.0, 406.0], [18.1, 406.0], [18.2, 406.0], [18.3, 406.0], [18.4, 407.0], [18.5, 407.0], [18.6, 407.0], [18.7, 407.0], [18.8, 407.0], [18.9, 407.0], [19.0, 407.0], [19.1, 407.0], [19.2, 407.0], [19.3, 407.0], [19.4, 407.0], [19.5, 407.0], [19.6, 407.0], [19.7, 407.0], [19.8, 407.0], [19.9, 407.0], [20.0, 408.0], [20.1, 408.0], [20.2, 408.0], [20.3, 408.0], [20.4, 408.0], [20.5, 408.0], [20.6, 408.0], [20.7, 408.0], [20.8, 408.0], [20.9, 408.0], [21.0, 408.0], [21.1, 408.0], [21.2, 408.0], [21.3, 408.0], [21.4, 408.0], [21.5, 408.0], [21.6, 408.0], [21.7, 409.0], [21.8, 409.0], [21.9, 409.0], [22.0, 409.0], [22.1, 409.0], [22.2, 409.0], [22.3, 409.0], [22.4, 409.0], [22.5, 409.0], [22.6, 409.0], [22.7, 409.0], [22.8, 409.0], [22.9, 409.0], [23.0, 409.0], [23.1, 409.0], [23.2, 409.0], [23.3, 409.0], [23.4, 412.0], [23.5, 412.0], [23.6, 412.0], [23.7, 412.0], [23.8, 412.0], [23.9, 412.0], [24.0, 412.0], [24.1, 412.0], [24.2, 412.0], [24.3, 412.0], [24.4, 412.0], [24.5, 412.0], [24.6, 412.0], [24.7, 412.0], [24.8, 412.0], [24.9, 412.0], [25.0, 412.0], [25.1, 414.0], [25.2, 414.0], [25.3, 414.0], [25.4, 414.0], [25.5, 414.0], [25.6, 414.0], [25.7, 414.0], [25.8, 414.0], [25.9, 414.0], [26.0, 414.0], [26.1, 414.0], [26.2, 414.0], [26.3, 414.0], [26.4, 414.0], [26.5, 414.0], [26.6, 414.0], [26.7, 416.0], [26.8, 416.0], [26.9, 416.0], [27.0, 416.0], [27.1, 416.0], [27.2, 416.0], [27.3, 416.0], [27.4, 416.0], [27.5, 416.0], [27.6, 416.0], [27.7, 416.0], [27.8, 416.0], [27.9, 416.0], [28.0, 416.0], [28.1, 416.0], [28.2, 416.0], [28.3, 416.0], [28.4, 418.0], [28.5, 418.0], [28.6, 418.0], [28.7, 418.0], [28.8, 418.0], [28.9, 418.0], [29.0, 418.0], [29.1, 418.0], [29.2, 418.0], [29.3, 418.0], [29.4, 418.0], [29.5, 418.0], [29.6, 418.0], [29.7, 418.0], [29.8, 418.0], [29.9, 418.0], [30.0, 418.0], [30.1, 421.0], [30.2, 421.0], [30.3, 421.0], [30.4, 421.0], [30.5, 421.0], [30.6, 421.0], [30.7, 421.0], [30.8, 421.0], [30.9, 421.0], [31.0, 421.0], [31.1, 421.0], [31.2, 421.0], [31.3, 421.0], [31.4, 421.0], [31.5, 421.0], [31.6, 421.0], [31.7, 463.0], [31.8, 463.0], [31.9, 463.0], [32.0, 463.0], [32.1, 463.0], [32.2, 463.0], [32.3, 463.0], [32.4, 463.0], [32.5, 463.0], [32.6, 463.0], [32.7, 463.0], [32.8, 463.0], [32.9, 463.0], [33.0, 463.0], [33.1, 463.0], [33.2, 463.0], [33.3, 463.0], [33.4, 521.0], [33.5, 521.0], [33.6, 521.0], [33.7, 521.0], [33.8, 521.0], [33.9, 521.0], [34.0, 521.0], [34.1, 521.0], [34.2, 521.0], [34.3, 521.0], [34.4, 521.0], [34.5, 521.0], [34.6, 521.0], [34.7, 521.0], [34.8, 521.0], [34.9, 521.0], [35.0, 521.0], [35.1, 542.0], [35.2, 542.0], [35.3, 542.0], [35.4, 542.0], [35.5, 542.0], [35.6, 542.0], [35.7, 542.0], [35.8, 542.0], [35.9, 542.0], [36.0, 542.0], [36.1, 542.0], [36.2, 542.0], [36.3, 542.0], [36.4, 542.0], [36.5, 542.0], [36.6, 542.0], [36.7, 563.0], [36.8, 563.0], [36.9, 563.0], [37.0, 563.0], [37.1, 563.0], [37.2, 563.0], [37.3, 563.0], [37.4, 563.0], [37.5, 563.0], [37.6, 563.0], [37.7, 563.0], [37.8, 563.0], [37.9, 563.0], [38.0, 563.0], [38.1, 563.0], [38.2, 563.0], [38.3, 563.0], [38.4, 568.0], [38.5, 568.0], [38.6, 568.0], [38.7, 568.0], [38.8, 568.0], [38.9, 568.0], [39.0, 568.0], [39.1, 568.0], [39.2, 568.0], [39.3, 568.0], [39.4, 568.0], [39.5, 568.0], [39.6, 568.0], [39.7, 568.0], [39.8, 568.0], [39.9, 568.0], [40.0, 580.0], [40.1, 580.0], [40.2, 580.0], [40.3, 580.0], [40.4, 580.0], [40.5, 580.0], [40.6, 580.0], [40.7, 580.0], [40.8, 580.0], [40.9, 580.0], [41.0, 580.0], [41.1, 580.0], [41.2, 580.0], [41.3, 580.0], [41.4, 580.0], [41.5, 580.0], [41.6, 580.0], [41.7, 582.0], [41.8, 582.0], [41.9, 582.0], [42.0, 582.0], [42.1, 582.0], [42.2, 582.0], [42.3, 582.0], [42.4, 582.0], [42.5, 582.0], [42.6, 582.0], [42.7, 582.0], [42.8, 582.0], [42.9, 582.0], [43.0, 582.0], [43.1, 582.0], [43.2, 582.0], [43.3, 582.0], [43.4, 587.0], [43.5, 587.0], [43.6, 587.0], [43.7, 587.0], [43.8, 587.0], [43.9, 587.0], [44.0, 587.0], [44.1, 587.0], [44.2, 587.0], [44.3, 587.0], [44.4, 587.0], [44.5, 587.0], [44.6, 587.0], [44.7, 587.0], [44.8, 587.0], [44.9, 587.0], [45.0, 601.0], [45.1, 601.0], [45.2, 601.0], [45.3, 601.0], [45.4, 601.0], [45.5, 601.0], [45.6, 601.0], [45.7, 601.0], [45.8, 601.0], [45.9, 601.0], [46.0, 601.0], [46.1, 601.0], [46.2, 601.0], [46.3, 601.0], [46.4, 601.0], [46.5, 601.0], [46.6, 601.0], [46.7, 615.0], [46.8, 615.0], [46.9, 615.0], [47.0, 615.0], [47.1, 615.0], [47.2, 615.0], [47.3, 615.0], [47.4, 615.0], [47.5, 615.0], [47.6, 615.0], [47.7, 615.0], [47.8, 615.0], [47.9, 615.0], [48.0, 615.0], [48.1, 615.0], [48.2, 615.0], [48.3, 615.0], [48.4, 617.0], [48.5, 617.0], [48.6, 617.0], [48.7, 617.0], [48.8, 617.0], [48.9, 617.0], [49.0, 617.0], [49.1, 617.0], [49.2, 617.0], [49.3, 617.0], [49.4, 617.0], [49.5, 617.0], [49.6, 617.0], [49.7, 617.0], [49.8, 617.0], [49.9, 617.0], [50.0, 667.0], [50.1, 667.0], [50.2, 667.0], [50.3, 667.0], [50.4, 667.0], [50.5, 667.0], [50.6, 667.0], [50.7, 667.0], [50.8, 667.0], [50.9, 667.0], [51.0, 667.0], [51.1, 667.0], [51.2, 667.0], [51.3, 667.0], [51.4, 667.0], [51.5, 667.0], [51.6, 667.0], [51.7, 753.0], [51.8, 753.0], [51.9, 753.0], [52.0, 753.0], [52.1, 753.0], [52.2, 753.0], [52.3, 753.0], [52.4, 753.0], [52.5, 753.0], [52.6, 753.0], [52.7, 753.0], [52.8, 753.0], [52.9, 753.0], [53.0, 753.0], [53.1, 753.0], [53.2, 753.0], [53.3, 753.0], [53.4, 791.0], [53.5, 791.0], [53.6, 791.0], [53.7, 791.0], [53.8, 791.0], [53.9, 791.0], [54.0, 791.0], [54.1, 791.0], [54.2, 791.0], [54.3, 791.0], [54.4, 791.0], [54.5, 791.0], [54.6, 791.0], [54.7, 791.0], [54.8, 791.0], [54.9, 791.0], [55.0, 807.0], [55.1, 807.0], [55.2, 807.0], [55.3, 807.0], [55.4, 807.0], [55.5, 807.0], [55.6, 807.0], [55.7, 807.0], [55.8, 807.0], [55.9, 807.0], [56.0, 807.0], [56.1, 807.0], [56.2, 807.0], [56.3, 807.0], [56.4, 807.0], [56.5, 807.0], [56.6, 807.0], [56.7, 816.0], [56.8, 816.0], [56.9, 816.0], [57.0, 816.0], [57.1, 816.0], [57.2, 816.0], [57.3, 816.0], [57.4, 816.0], [57.5, 816.0], [57.6, 816.0], [57.7, 816.0], [57.8, 816.0], [57.9, 816.0], [58.0, 816.0], [58.1, 816.0], [58.2, 816.0], [58.3, 816.0], [58.4, 818.0], [58.5, 818.0], [58.6, 818.0], [58.7, 818.0], [58.8, 818.0], [58.9, 818.0], [59.0, 818.0], [59.1, 818.0], [59.2, 818.0], [59.3, 818.0], [59.4, 818.0], [59.5, 818.0], [59.6, 818.0], [59.7, 818.0], [59.8, 818.0], [59.9, 818.0], [60.0, 885.0], [60.1, 885.0], [60.2, 885.0], [60.3, 885.0], [60.4, 885.0], [60.5, 885.0], [60.6, 885.0], [60.7, 885.0], [60.8, 885.0], [60.9, 885.0], [61.0, 885.0], [61.1, 885.0], [61.2, 885.0], [61.3, 885.0], [61.4, 885.0], [61.5, 885.0], [61.6, 885.0], [61.7, 918.0], [61.8, 918.0], [61.9, 918.0], [62.0, 918.0], [62.1, 918.0], [62.2, 918.0], [62.3, 918.0], [62.4, 918.0], [62.5, 918.0], [62.6, 918.0], [62.7, 918.0], [62.8, 918.0], [62.9, 918.0], [63.0, 918.0], [63.1, 918.0], [63.2, 918.0], [63.3, 918.0], [63.4, 976.0], [63.5, 976.0], [63.6, 976.0], [63.7, 976.0], [63.8, 976.0], [63.9, 976.0], [64.0, 976.0], [64.1, 976.0], [64.2, 976.0], [64.3, 976.0], [64.4, 976.0], [64.5, 976.0], [64.6, 976.0], [64.7, 976.0], [64.8, 976.0], [64.9, 976.0], [65.0, 979.0], [65.1, 979.0], [65.2, 979.0], [65.3, 979.0], [65.4, 979.0], [65.5, 979.0], [65.6, 979.0], [65.7, 979.0], [65.8, 979.0], [65.9, 979.0], [66.0, 979.0], [66.1, 979.0], [66.2, 979.0], [66.3, 979.0], [66.4, 979.0], [66.5, 979.0], [66.6, 979.0], [66.7, 983.0], [66.8, 983.0], [66.9, 983.0], [67.0, 983.0], [67.1, 983.0], [67.2, 983.0], [67.3, 983.0], [67.4, 983.0], [67.5, 983.0], [67.6, 983.0], [67.7, 983.0], [67.8, 983.0], [67.9, 983.0], [68.0, 983.0], [68.1, 983.0], [68.2, 983.0], [68.3, 983.0], [68.4, 1009.0], [68.5, 1009.0], [68.6, 1009.0], [68.7, 1009.0], [68.8, 1009.0], [68.9, 1009.0], [69.0, 1009.0], [69.1, 1009.0], [69.2, 1009.0], [69.3, 1009.0], [69.4, 1009.0], [69.5, 1009.0], [69.6, 1009.0], [69.7, 1009.0], [69.8, 1009.0], [69.9, 1009.0], [70.0, 1010.0], [70.1, 1010.0], [70.2, 1010.0], [70.3, 1010.0], [70.4, 1010.0], [70.5, 1010.0], [70.6, 1010.0], [70.7, 1010.0], [70.8, 1010.0], [70.9, 1010.0], [71.0, 1010.0], [71.1, 1010.0], [71.2, 1010.0], [71.3, 1010.0], [71.4, 1010.0], [71.5, 1010.0], [71.6, 1010.0], [71.7, 1013.0], [71.8, 1013.0], [71.9, 1013.0], [72.0, 1013.0], [72.1, 1013.0], [72.2, 1013.0], [72.3, 1013.0], [72.4, 1013.0], [72.5, 1013.0], [72.6, 1013.0], [72.7, 1013.0], [72.8, 1013.0], [72.9, 1013.0], [73.0, 1013.0], [73.1, 1013.0], [73.2, 1013.0], [73.3, 1013.0], [73.4, 1036.0], [73.5, 1036.0], [73.6, 1036.0], [73.7, 1036.0], [73.8, 1036.0], [73.9, 1036.0], [74.0, 1036.0], [74.1, 1036.0], [74.2, 1036.0], [74.3, 1036.0], [74.4, 1036.0], [74.5, 1036.0], [74.6, 1036.0], [74.7, 1036.0], [74.8, 1036.0], [74.9, 1036.0], [75.0, 1040.0], [75.1, 1040.0], [75.2, 1040.0], [75.3, 1040.0], [75.4, 1040.0], [75.5, 1040.0], [75.6, 1040.0], [75.7, 1040.0], [75.8, 1040.0], [75.9, 1040.0], [76.0, 1040.0], [76.1, 1040.0], [76.2, 1040.0], [76.3, 1040.0], [76.4, 1040.0], [76.5, 1040.0], [76.6, 1040.0], [76.7, 1065.0], [76.8, 1065.0], [76.9, 1065.0], [77.0, 1065.0], [77.1, 1065.0], [77.2, 1065.0], [77.3, 1065.0], [77.4, 1065.0], [77.5, 1065.0], [77.6, 1065.0], [77.7, 1065.0], [77.8, 1065.0], [77.9, 1065.0], [78.0, 1065.0], [78.1, 1065.0], [78.2, 1065.0], [78.3, 1065.0], [78.4, 1073.0], [78.5, 1073.0], [78.6, 1073.0], [78.7, 1073.0], [78.8, 1073.0], [78.9, 1073.0], [79.0, 1073.0], [79.1, 1073.0], [79.2, 1073.0], [79.3, 1073.0], [79.4, 1073.0], [79.5, 1073.0], [79.6, 1073.0], [79.7, 1073.0], [79.8, 1073.0], [79.9, 1073.0], [80.0, 1073.0], [80.1, 1082.0], [80.2, 1082.0], [80.3, 1082.0], [80.4, 1082.0], [80.5, 1082.0], [80.6, 1082.0], [80.7, 1082.0], [80.8, 1082.0], [80.9, 1082.0], [81.0, 1082.0], [81.1, 1082.0], [81.2, 1082.0], [81.3, 1082.0], [81.4, 1082.0], [81.5, 1082.0], [81.6, 1082.0], [81.7, 1145.0], [81.8, 1145.0], [81.9, 1145.0], [82.0, 1145.0], [82.1, 1145.0], [82.2, 1145.0], [82.3, 1145.0], [82.4, 1145.0], [82.5, 1145.0], [82.6, 1145.0], [82.7, 1145.0], [82.8, 1145.0], [82.9, 1145.0], [83.0, 1145.0], [83.1, 1145.0], [83.2, 1145.0], [83.3, 1145.0], [83.4, 1147.0], [83.5, 1147.0], [83.6, 1147.0], [83.7, 1147.0], [83.8, 1147.0], [83.9, 1147.0], [84.0, 1147.0], [84.1, 1147.0], [84.2, 1147.0], [84.3, 1147.0], [84.4, 1147.0], [84.5, 1147.0], [84.6, 1147.0], [84.7, 1147.0], [84.8, 1147.0], [84.9, 1147.0], [85.0, 1147.0], [85.1, 1151.0], [85.2, 1151.0], [85.3, 1151.0], [85.4, 1151.0], [85.5, 1151.0], [85.6, 1151.0], [85.7, 1151.0], [85.8, 1151.0], [85.9, 1151.0], [86.0, 1151.0], [86.1, 1151.0], [86.2, 1151.0], [86.3, 1151.0], [86.4, 1151.0], [86.5, 1151.0], [86.6, 1151.0], [86.7, 1198.0], [86.8, 1198.0], [86.9, 1198.0], [87.0, 1198.0], [87.1, 1198.0], [87.2, 1198.0], [87.3, 1198.0], [87.4, 1198.0], [87.5, 1198.0], [87.6, 1198.0], [87.7, 1198.0], [87.8, 1198.0], [87.9, 1198.0], [88.0, 1198.0], [88.1, 1198.0], [88.2, 1198.0], [88.3, 1198.0], [88.4, 1259.0], [88.5, 1259.0], [88.6, 1259.0], [88.7, 1259.0], [88.8, 1259.0], [88.9, 1259.0], [89.0, 1259.0], [89.1, 1259.0], [89.2, 1259.0], [89.3, 1259.0], [89.4, 1259.0], [89.5, 1259.0], [89.6, 1259.0], [89.7, 1259.0], [89.8, 1259.0], [89.9, 1259.0], [90.0, 1259.0], [90.1, 1276.0], [90.2, 1276.0], [90.3, 1276.0], [90.4, 1276.0], [90.5, 1276.0], [90.6, 1276.0], [90.7, 1276.0], [90.8, 1276.0], [90.9, 1276.0], [91.0, 1276.0], [91.1, 1276.0], [91.2, 1276.0], [91.3, 1276.0], [91.4, 1276.0], [91.5, 1276.0], [91.6, 1276.0], [91.7, 1600.0], [91.8, 1600.0], [91.9, 1600.0], [92.0, 1600.0], [92.1, 1600.0], [92.2, 1600.0], [92.3, 1600.0], [92.4, 1600.0], [92.5, 1600.0], [92.6, 1600.0], [92.7, 1600.0], [92.8, 1600.0], [92.9, 1600.0], [93.0, 1600.0], [93.1, 1600.0], [93.2, 1600.0], [93.3, 1600.0], [93.4, 1647.0], [93.5, 1647.0], [93.6, 1647.0], [93.7, 1647.0], [93.8, 1647.0], [93.9, 1647.0], [94.0, 1647.0], [94.1, 1647.0], [94.2, 1647.0], [94.3, 1647.0], [94.4, 1647.0], [94.5, 1647.0], [94.6, 1647.0], [94.7, 1647.0], [94.8, 1647.0], [94.9, 1647.0], [95.0, 1647.0], [95.1, 1728.0], [95.2, 1728.0], [95.3, 1728.0], [95.4, 1728.0], [95.5, 1728.0], [95.6, 1728.0], [95.7, 1728.0], [95.8, 1728.0], [95.9, 1728.0], [96.0, 1728.0], [96.1, 1728.0], [96.2, 1728.0], [96.3, 1728.0], [96.4, 1728.0], [96.5, 1728.0], [96.6, 1728.0], [96.7, 2157.0], [96.8, 2157.0], [96.9, 2157.0], [97.0, 2157.0], [97.1, 2157.0], [97.2, 2157.0], [97.3, 2157.0], [97.4, 2157.0], [97.5, 2157.0], [97.6, 2157.0], [97.7, 2157.0], [97.8, 2157.0], [97.9, 2157.0], [98.0, 2157.0], [98.1, 2157.0], [98.2, 2157.0], [98.3, 2157.0], [98.4, 3014.0], [98.5, 3014.0], [98.6, 3014.0], [98.7, 3014.0], [98.8, 3014.0], [98.9, 3014.0], [99.0, 3014.0], [99.1, 3014.0], [99.2, 3014.0], [99.3, 3014.0], [99.4, 3014.0], [99.5, 3014.0], [99.6, 3014.0], [99.7, 3014.0], [99.8, 3014.0], [99.9, 3014.0], [100.0, 3014.0]], "isOverall": false, "label": "getNavigations", "isController": false}, {"data": [[0.0, 304.0], [0.1, 304.0], [0.2, 304.0], [0.3, 304.0], [0.4, 304.0], [0.5, 304.0], [0.6, 304.0], [0.7, 304.0], [0.8, 304.0], [0.9, 304.0], [1.0, 304.0], [1.1, 304.0], [1.2, 304.0], [1.3, 304.0], [1.4, 304.0], [1.5, 304.0], [1.6, 304.0], [1.7, 352.0], [1.8, 352.0], [1.9, 352.0], [2.0, 352.0], [2.1, 352.0], [2.2, 352.0], [2.3, 352.0], [2.4, 352.0], [2.5, 352.0], [2.6, 352.0], [2.7, 352.0], [2.8, 352.0], [2.9, 352.0], [3.0, 352.0], [3.1, 352.0], [3.2, 352.0], [3.3, 352.0], [3.4, 363.0], [3.5, 363.0], [3.6, 363.0], [3.7, 363.0], [3.8, 363.0], [3.9, 363.0], [4.0, 363.0], [4.1, 363.0], [4.2, 363.0], [4.3, 363.0], [4.4, 363.0], [4.5, 363.0], [4.6, 363.0], [4.7, 363.0], [4.8, 363.0], [4.9, 363.0], [5.0, 400.0], [5.1, 400.0], [5.2, 400.0], [5.3, 400.0], [5.4, 400.0], [5.5, 400.0], [5.6, 400.0], [5.7, 400.0], [5.8, 400.0], [5.9, 400.0], [6.0, 400.0], [6.1, 400.0], [6.2, 400.0], [6.3, 400.0], [6.4, 400.0], [6.5, 400.0], [6.6, 400.0], [6.7, 420.0], [6.8, 420.0], [6.9, 420.0], [7.0, 420.0], [7.1, 420.0], [7.2, 420.0], [7.3, 420.0], [7.4, 420.0], [7.5, 420.0], [7.6, 420.0], [7.7, 420.0], [7.8, 420.0], [7.9, 420.0], [8.0, 420.0], [8.1, 420.0], [8.2, 420.0], [8.3, 420.0], [8.4, 469.0], [8.5, 469.0], [8.6, 469.0], [8.7, 469.0], [8.8, 469.0], [8.9, 469.0], [9.0, 469.0], [9.1, 469.0], [9.2, 469.0], [9.3, 469.0], [9.4, 469.0], [9.5, 469.0], [9.6, 469.0], [9.7, 469.0], [9.8, 469.0], [9.9, 469.0], [10.0, 556.0], [10.1, 556.0], [10.2, 556.0], [10.3, 556.0], [10.4, 556.0], [10.5, 556.0], [10.6, 556.0], [10.7, 556.0], [10.8, 556.0], [10.9, 556.0], [11.0, 556.0], [11.1, 556.0], [11.2, 556.0], [11.3, 556.0], [11.4, 556.0], [11.5, 556.0], [11.6, 556.0], [11.7, 579.0], [11.8, 579.0], [11.9, 579.0], [12.0, 579.0], [12.1, 579.0], [12.2, 579.0], [12.3, 579.0], [12.4, 579.0], [12.5, 579.0], [12.6, 579.0], [12.7, 579.0], [12.8, 579.0], [12.9, 579.0], [13.0, 579.0], [13.1, 579.0], [13.2, 579.0], [13.3, 579.0], [13.4, 642.0], [13.5, 642.0], [13.6, 642.0], [13.7, 642.0], [13.8, 642.0], [13.9, 642.0], [14.0, 642.0], [14.1, 642.0], [14.2, 642.0], [14.3, 642.0], [14.4, 642.0], [14.5, 642.0], [14.6, 642.0], [14.7, 642.0], [14.8, 642.0], [14.9, 642.0], [15.0, 658.0], [15.1, 658.0], [15.2, 658.0], [15.3, 658.0], [15.4, 658.0], [15.5, 658.0], [15.6, 658.0], [15.7, 658.0], [15.8, 658.0], [15.9, 658.0], [16.0, 658.0], [16.1, 658.0], [16.2, 658.0], [16.3, 658.0], [16.4, 658.0], [16.5, 658.0], [16.6, 658.0], [16.7, 754.0], [16.8, 754.0], [16.9, 754.0], [17.0, 754.0], [17.1, 754.0], [17.2, 754.0], [17.3, 754.0], [17.4, 754.0], [17.5, 754.0], [17.6, 754.0], [17.7, 754.0], [17.8, 754.0], [17.9, 754.0], [18.0, 754.0], [18.1, 754.0], [18.2, 754.0], [18.3, 754.0], [18.4, 759.0], [18.5, 759.0], [18.6, 759.0], [18.7, 759.0], [18.8, 759.0], [18.9, 759.0], [19.0, 759.0], [19.1, 759.0], [19.2, 759.0], [19.3, 759.0], [19.4, 759.0], [19.5, 759.0], [19.6, 759.0], [19.7, 759.0], [19.8, 759.0], [19.9, 759.0], [20.0, 764.0], [20.1, 764.0], [20.2, 764.0], [20.3, 764.0], [20.4, 764.0], [20.5, 764.0], [20.6, 764.0], [20.7, 764.0], [20.8, 764.0], [20.9, 764.0], [21.0, 764.0], [21.1, 764.0], [21.2, 764.0], [21.3, 764.0], [21.4, 764.0], [21.5, 764.0], [21.6, 764.0], [21.7, 794.0], [21.8, 794.0], [21.9, 794.0], [22.0, 794.0], [22.1, 794.0], [22.2, 794.0], [22.3, 794.0], [22.4, 794.0], [22.5, 794.0], [22.6, 794.0], [22.7, 794.0], [22.8, 794.0], [22.9, 794.0], [23.0, 794.0], [23.1, 794.0], [23.2, 794.0], [23.3, 794.0], [23.4, 938.0], [23.5, 938.0], [23.6, 938.0], [23.7, 938.0], [23.8, 938.0], [23.9, 938.0], [24.0, 938.0], [24.1, 938.0], [24.2, 938.0], [24.3, 938.0], [24.4, 938.0], [24.5, 938.0], [24.6, 938.0], [24.7, 938.0], [24.8, 938.0], [24.9, 938.0], [25.0, 938.0], [25.1, 946.0], [25.2, 946.0], [25.3, 946.0], [25.4, 946.0], [25.5, 946.0], [25.6, 946.0], [25.7, 946.0], [25.8, 946.0], [25.9, 946.0], [26.0, 946.0], [26.1, 946.0], [26.2, 946.0], [26.3, 946.0], [26.4, 946.0], [26.5, 946.0], [26.6, 946.0], [26.7, 1045.0], [26.8, 1045.0], [26.9, 1045.0], [27.0, 1045.0], [27.1, 1045.0], [27.2, 1045.0], [27.3, 1045.0], [27.4, 1045.0], [27.5, 1045.0], [27.6, 1045.0], [27.7, 1045.0], [27.8, 1045.0], [27.9, 1045.0], [28.0, 1045.0], [28.1, 1045.0], [28.2, 1045.0], [28.3, 1045.0], [28.4, 1376.0], [28.5, 1376.0], [28.6, 1376.0], [28.7, 1376.0], [28.8, 1376.0], [28.9, 1376.0], [29.0, 1376.0], [29.1, 1376.0], [29.2, 1376.0], [29.3, 1376.0], [29.4, 1376.0], [29.5, 1376.0], [29.6, 1376.0], [29.7, 1376.0], [29.8, 1376.0], [29.9, 1376.0], [30.0, 1376.0], [30.1, 1387.0], [30.2, 1387.0], [30.3, 1387.0], [30.4, 1387.0], [30.5, 1387.0], [30.6, 1387.0], [30.7, 1387.0], [30.8, 1387.0], [30.9, 1387.0], [31.0, 1387.0], [31.1, 1387.0], [31.2, 1387.0], [31.3, 1387.0], [31.4, 1387.0], [31.5, 1387.0], [31.6, 1387.0], [31.7, 1398.0], [31.8, 1398.0], [31.9, 1398.0], [32.0, 1398.0], [32.1, 1398.0], [32.2, 1398.0], [32.3, 1398.0], [32.4, 1398.0], [32.5, 1398.0], [32.6, 1398.0], [32.7, 1398.0], [32.8, 1398.0], [32.9, 1398.0], [33.0, 1398.0], [33.1, 1398.0], [33.2, 1398.0], [33.3, 1398.0], [33.4, 1478.0], [33.5, 1478.0], [33.6, 1478.0], [33.7, 1478.0], [33.8, 1478.0], [33.9, 1478.0], [34.0, 1478.0], [34.1, 1478.0], [34.2, 1478.0], [34.3, 1478.0], [34.4, 1478.0], [34.5, 1478.0], [34.6, 1478.0], [34.7, 1478.0], [34.8, 1478.0], [34.9, 1478.0], [35.0, 1478.0], [35.1, 1512.0], [35.2, 1512.0], [35.3, 1512.0], [35.4, 1512.0], [35.5, 1512.0], [35.6, 1512.0], [35.7, 1512.0], [35.8, 1512.0], [35.9, 1512.0], [36.0, 1512.0], [36.1, 1512.0], [36.2, 1512.0], [36.3, 1512.0], [36.4, 1512.0], [36.5, 1512.0], [36.6, 1512.0], [36.7, 1561.0], [36.8, 1561.0], [36.9, 1561.0], [37.0, 1561.0], [37.1, 1561.0], [37.2, 1561.0], [37.3, 1561.0], [37.4, 1561.0], [37.5, 1561.0], [37.6, 1561.0], [37.7, 1561.0], [37.8, 1561.0], [37.9, 1561.0], [38.0, 1561.0], [38.1, 1561.0], [38.2, 1561.0], [38.3, 1561.0], [38.4, 1619.0], [38.5, 1619.0], [38.6, 1619.0], [38.7, 1619.0], [38.8, 1619.0], [38.9, 1619.0], [39.0, 1619.0], [39.1, 1619.0], [39.2, 1619.0], [39.3, 1619.0], [39.4, 1619.0], [39.5, 1619.0], [39.6, 1619.0], [39.7, 1619.0], [39.8, 1619.0], [39.9, 1619.0], [40.0, 1683.0], [40.1, 1683.0], [40.2, 1683.0], [40.3, 1683.0], [40.4, 1683.0], [40.5, 1683.0], [40.6, 1683.0], [40.7, 1683.0], [40.8, 1683.0], [40.9, 1683.0], [41.0, 1683.0], [41.1, 1683.0], [41.2, 1683.0], [41.3, 1683.0], [41.4, 1683.0], [41.5, 1683.0], [41.6, 1683.0], [41.7, 1774.0], [41.8, 1774.0], [41.9, 1774.0], [42.0, 1774.0], [42.1, 1774.0], [42.2, 1774.0], [42.3, 1774.0], [42.4, 1774.0], [42.5, 1774.0], [42.6, 1774.0], [42.7, 1774.0], [42.8, 1774.0], [42.9, 1774.0], [43.0, 1774.0], [43.1, 1774.0], [43.2, 1774.0], [43.3, 1774.0], [43.4, 1890.0], [43.5, 1890.0], [43.6, 1890.0], [43.7, 1890.0], [43.8, 1890.0], [43.9, 1890.0], [44.0, 1890.0], [44.1, 1890.0], [44.2, 1890.0], [44.3, 1890.0], [44.4, 1890.0], [44.5, 1890.0], [44.6, 1890.0], [44.7, 1890.0], [44.8, 1890.0], [44.9, 1890.0], [45.0, 1894.0], [45.1, 1894.0], [45.2, 1894.0], [45.3, 1894.0], [45.4, 1894.0], [45.5, 1894.0], [45.6, 1894.0], [45.7, 1894.0], [45.8, 1894.0], [45.9, 1894.0], [46.0, 1894.0], [46.1, 1894.0], [46.2, 1894.0], [46.3, 1894.0], [46.4, 1894.0], [46.5, 1894.0], [46.6, 1894.0], [46.7, 1961.0], [46.8, 1961.0], [46.9, 1961.0], [47.0, 1961.0], [47.1, 1961.0], [47.2, 1961.0], [47.3, 1961.0], [47.4, 1961.0], [47.5, 1961.0], [47.6, 1961.0], [47.7, 1961.0], [47.8, 1961.0], [47.9, 1961.0], [48.0, 1961.0], [48.1, 1961.0], [48.2, 1961.0], [48.3, 1961.0], [48.4, 1969.0], [48.5, 1969.0], [48.6, 1969.0], [48.7, 1969.0], [48.8, 1969.0], [48.9, 1969.0], [49.0, 1969.0], [49.1, 1969.0], [49.2, 1969.0], [49.3, 1969.0], [49.4, 1969.0], [49.5, 1969.0], [49.6, 1969.0], [49.7, 1969.0], [49.8, 1969.0], [49.9, 1969.0], [50.0, 1970.0], [50.1, 1970.0], [50.2, 1970.0], [50.3, 1970.0], [50.4, 1970.0], [50.5, 1970.0], [50.6, 1970.0], [50.7, 1970.0], [50.8, 1970.0], [50.9, 1970.0], [51.0, 1970.0], [51.1, 1970.0], [51.2, 1970.0], [51.3, 1970.0], [51.4, 1970.0], [51.5, 1970.0], [51.6, 1970.0], [51.7, 1987.0], [51.8, 1987.0], [51.9, 1987.0], [52.0, 1987.0], [52.1, 1987.0], [52.2, 1987.0], [52.3, 1987.0], [52.4, 1987.0], [52.5, 1987.0], [52.6, 1987.0], [52.7, 1987.0], [52.8, 1987.0], [52.9, 1987.0], [53.0, 1987.0], [53.1, 1987.0], [53.2, 1987.0], [53.3, 1987.0], [53.4, 1990.0], [53.5, 1990.0], [53.6, 1990.0], [53.7, 1990.0], [53.8, 1990.0], [53.9, 1990.0], [54.0, 1990.0], [54.1, 1990.0], [54.2, 1990.0], [54.3, 1990.0], [54.4, 1990.0], [54.5, 1990.0], [54.6, 1990.0], [54.7, 1990.0], [54.8, 1990.0], [54.9, 1990.0], [55.0, 1992.0], [55.1, 1992.0], [55.2, 1992.0], [55.3, 1992.0], [55.4, 1992.0], [55.5, 1992.0], [55.6, 1992.0], [55.7, 1992.0], [55.8, 1992.0], [55.9, 1992.0], [56.0, 1992.0], [56.1, 1992.0], [56.2, 1992.0], [56.3, 1992.0], [56.4, 1992.0], [56.5, 1992.0], [56.6, 1992.0], [56.7, 1992.0], [56.8, 1992.0], [56.9, 1992.0], [57.0, 1992.0], [57.1, 1992.0], [57.2, 1992.0], [57.3, 1992.0], [57.4, 1992.0], [57.5, 1992.0], [57.6, 1992.0], [57.7, 1992.0], [57.8, 1992.0], [57.9, 1992.0], [58.0, 1992.0], [58.1, 1992.0], [58.2, 1992.0], [58.3, 1992.0], [58.4, 2028.0], [58.5, 2028.0], [58.6, 2028.0], [58.7, 2028.0], [58.8, 2028.0], [58.9, 2028.0], [59.0, 2028.0], [59.1, 2028.0], [59.2, 2028.0], [59.3, 2028.0], [59.4, 2028.0], [59.5, 2028.0], [59.6, 2028.0], [59.7, 2028.0], [59.8, 2028.0], [59.9, 2028.0], [60.0, 2072.0], [60.1, 2072.0], [60.2, 2072.0], [60.3, 2072.0], [60.4, 2072.0], [60.5, 2072.0], [60.6, 2072.0], [60.7, 2072.0], [60.8, 2072.0], [60.9, 2072.0], [61.0, 2072.0], [61.1, 2072.0], [61.2, 2072.0], [61.3, 2072.0], [61.4, 2072.0], [61.5, 2072.0], [61.6, 2072.0], [61.7, 2083.0], [61.8, 2083.0], [61.9, 2083.0], [62.0, 2083.0], [62.1, 2083.0], [62.2, 2083.0], [62.3, 2083.0], [62.4, 2083.0], [62.5, 2083.0], [62.6, 2083.0], [62.7, 2083.0], [62.8, 2083.0], [62.9, 2083.0], [63.0, 2083.0], [63.1, 2083.0], [63.2, 2083.0], [63.3, 2083.0], [63.4, 2088.0], [63.5, 2088.0], [63.6, 2088.0], [63.7, 2088.0], [63.8, 2088.0], [63.9, 2088.0], [64.0, 2088.0], [64.1, 2088.0], [64.2, 2088.0], [64.3, 2088.0], [64.4, 2088.0], [64.5, 2088.0], [64.6, 2088.0], [64.7, 2088.0], [64.8, 2088.0], [64.9, 2088.0], [65.0, 2095.0], [65.1, 2095.0], [65.2, 2095.0], [65.3, 2095.0], [65.4, 2095.0], [65.5, 2095.0], [65.6, 2095.0], [65.7, 2095.0], [65.8, 2095.0], [65.9, 2095.0], [66.0, 2095.0], [66.1, 2095.0], [66.2, 2095.0], [66.3, 2095.0], [66.4, 2095.0], [66.5, 2095.0], [66.6, 2095.0], [66.7, 2108.0], [66.8, 2108.0], [66.9, 2108.0], [67.0, 2108.0], [67.1, 2108.0], [67.2, 2108.0], [67.3, 2108.0], [67.4, 2108.0], [67.5, 2108.0], [67.6, 2108.0], [67.7, 2108.0], [67.8, 2108.0], [67.9, 2108.0], [68.0, 2108.0], [68.1, 2108.0], [68.2, 2108.0], [68.3, 2108.0], [68.4, 2128.0], [68.5, 2128.0], [68.6, 2128.0], [68.7, 2128.0], [68.8, 2128.0], [68.9, 2128.0], [69.0, 2128.0], [69.1, 2128.0], [69.2, 2128.0], [69.3, 2128.0], [69.4, 2128.0], [69.5, 2128.0], [69.6, 2128.0], [69.7, 2128.0], [69.8, 2128.0], [69.9, 2128.0], [70.0, 2134.0], [70.1, 2134.0], [70.2, 2134.0], [70.3, 2134.0], [70.4, 2134.0], [70.5, 2134.0], [70.6, 2134.0], [70.7, 2134.0], [70.8, 2134.0], [70.9, 2134.0], [71.0, 2134.0], [71.1, 2134.0], [71.2, 2134.0], [71.3, 2134.0], [71.4, 2134.0], [71.5, 2134.0], [71.6, 2134.0], [71.7, 2166.0], [71.8, 2166.0], [71.9, 2166.0], [72.0, 2166.0], [72.1, 2166.0], [72.2, 2166.0], [72.3, 2166.0], [72.4, 2166.0], [72.5, 2166.0], [72.6, 2166.0], [72.7, 2166.0], [72.8, 2166.0], [72.9, 2166.0], [73.0, 2166.0], [73.1, 2166.0], [73.2, 2166.0], [73.3, 2166.0], [73.4, 2205.0], [73.5, 2205.0], [73.6, 2205.0], [73.7, 2205.0], [73.8, 2205.0], [73.9, 2205.0], [74.0, 2205.0], [74.1, 2205.0], [74.2, 2205.0], [74.3, 2205.0], [74.4, 2205.0], [74.5, 2205.0], [74.6, 2205.0], [74.7, 2205.0], [74.8, 2205.0], [74.9, 2205.0], [75.0, 2240.0], [75.1, 2240.0], [75.2, 2240.0], [75.3, 2240.0], [75.4, 2240.0], [75.5, 2240.0], [75.6, 2240.0], [75.7, 2240.0], [75.8, 2240.0], [75.9, 2240.0], [76.0, 2240.0], [76.1, 2240.0], [76.2, 2240.0], [76.3, 2240.0], [76.4, 2240.0], [76.5, 2240.0], [76.6, 2240.0], [76.7, 2303.0], [76.8, 2303.0], [76.9, 2303.0], [77.0, 2303.0], [77.1, 2303.0], [77.2, 2303.0], [77.3, 2303.0], [77.4, 2303.0], [77.5, 2303.0], [77.6, 2303.0], [77.7, 2303.0], [77.8, 2303.0], [77.9, 2303.0], [78.0, 2303.0], [78.1, 2303.0], [78.2, 2303.0], [78.3, 2303.0], [78.4, 2344.0], [78.5, 2344.0], [78.6, 2344.0], [78.7, 2344.0], [78.8, 2344.0], [78.9, 2344.0], [79.0, 2344.0], [79.1, 2344.0], [79.2, 2344.0], [79.3, 2344.0], [79.4, 2344.0], [79.5, 2344.0], [79.6, 2344.0], [79.7, 2344.0], [79.8, 2344.0], [79.9, 2344.0], [80.0, 2344.0], [80.1, 2417.0], [80.2, 2417.0], [80.3, 2417.0], [80.4, 2417.0], [80.5, 2417.0], [80.6, 2417.0], [80.7, 2417.0], [80.8, 2417.0], [80.9, 2417.0], [81.0, 2417.0], [81.1, 2417.0], [81.2, 2417.0], [81.3, 2417.0], [81.4, 2417.0], [81.5, 2417.0], [81.6, 2417.0], [81.7, 2419.0], [81.8, 2419.0], [81.9, 2419.0], [82.0, 2419.0], [82.1, 2419.0], [82.2, 2419.0], [82.3, 2419.0], [82.4, 2419.0], [82.5, 2419.0], [82.6, 2419.0], [82.7, 2419.0], [82.8, 2419.0], [82.9, 2419.0], [83.0, 2419.0], [83.1, 2419.0], [83.2, 2419.0], [83.3, 2419.0], [83.4, 2553.0], [83.5, 2553.0], [83.6, 2553.0], [83.7, 2553.0], [83.8, 2553.0], [83.9, 2553.0], [84.0, 2553.0], [84.1, 2553.0], [84.2, 2553.0], [84.3, 2553.0], [84.4, 2553.0], [84.5, 2553.0], [84.6, 2553.0], [84.7, 2553.0], [84.8, 2553.0], [84.9, 2553.0], [85.0, 2553.0], [85.1, 2587.0], [85.2, 2587.0], [85.3, 2587.0], [85.4, 2587.0], [85.5, 2587.0], [85.6, 2587.0], [85.7, 2587.0], [85.8, 2587.0], [85.9, 2587.0], [86.0, 2587.0], [86.1, 2587.0], [86.2, 2587.0], [86.3, 2587.0], [86.4, 2587.0], [86.5, 2587.0], [86.6, 2587.0], [86.7, 2778.0], [86.8, 2778.0], [86.9, 2778.0], [87.0, 2778.0], [87.1, 2778.0], [87.2, 2778.0], [87.3, 2778.0], [87.4, 2778.0], [87.5, 2778.0], [87.6, 2778.0], [87.7, 2778.0], [87.8, 2778.0], [87.9, 2778.0], [88.0, 2778.0], [88.1, 2778.0], [88.2, 2778.0], [88.3, 2778.0], [88.4, 2798.0], [88.5, 2798.0], [88.6, 2798.0], [88.7, 2798.0], [88.8, 2798.0], [88.9, 2798.0], [89.0, 2798.0], [89.1, 2798.0], [89.2, 2798.0], [89.3, 2798.0], [89.4, 2798.0], [89.5, 2798.0], [89.6, 2798.0], [89.7, 2798.0], [89.8, 2798.0], [89.9, 2798.0], [90.0, 2798.0], [90.1, 2830.0], [90.2, 2830.0], [90.3, 2830.0], [90.4, 2830.0], [90.5, 2830.0], [90.6, 2830.0], [90.7, 2830.0], [90.8, 2830.0], [90.9, 2830.0], [91.0, 2830.0], [91.1, 2830.0], [91.2, 2830.0], [91.3, 2830.0], [91.4, 2830.0], [91.5, 2830.0], [91.6, 2830.0], [91.7, 2863.0], [91.8, 2863.0], [91.9, 2863.0], [92.0, 2863.0], [92.1, 2863.0], [92.2, 2863.0], [92.3, 2863.0], [92.4, 2863.0], [92.5, 2863.0], [92.6, 2863.0], [92.7, 2863.0], [92.8, 2863.0], [92.9, 2863.0], [93.0, 2863.0], [93.1, 2863.0], [93.2, 2863.0], [93.3, 2863.0], [93.4, 3070.0], [93.5, 3070.0], [93.6, 3070.0], [93.7, 3070.0], [93.8, 3070.0], [93.9, 3070.0], [94.0, 3070.0], [94.1, 3070.0], [94.2, 3070.0], [94.3, 3070.0], [94.4, 3070.0], [94.5, 3070.0], [94.6, 3070.0], [94.7, 3070.0], [94.8, 3070.0], [94.9, 3070.0], [95.0, 3070.0], [95.1, 3097.0], [95.2, 3097.0], [95.3, 3097.0], [95.4, 3097.0], [95.5, 3097.0], [95.6, 3097.0], [95.7, 3097.0], [95.8, 3097.0], [95.9, 3097.0], [96.0, 3097.0], [96.1, 3097.0], [96.2, 3097.0], [96.3, 3097.0], [96.4, 3097.0], [96.5, 3097.0], [96.6, 3097.0], [96.7, 4259.0], [96.8, 4259.0], [96.9, 4259.0], [97.0, 4259.0], [97.1, 4259.0], [97.2, 4259.0], [97.3, 4259.0], [97.4, 4259.0], [97.5, 4259.0], [97.6, 4259.0], [97.7, 4259.0], [97.8, 4259.0], [97.9, 4259.0], [98.0, 4259.0], [98.1, 4259.0], [98.2, 4259.0], [98.3, 4259.0], [98.4, 18623.0], [98.5, 18623.0], [98.6, 18623.0], [98.7, 18623.0], [98.8, 18623.0], [98.9, 18623.0], [99.0, 18623.0], [99.1, 18623.0], [99.2, 18623.0], [99.3, 18623.0], [99.4, 18623.0], [99.5, 18623.0], [99.6, 18623.0], [99.7, 18623.0], [99.8, 18623.0], [99.9, 18623.0], [100.0, 18623.0]], "isOverall": false, "label": "getAllRolesAndGrades", "isController": false}, {"data": [[0.0, 783.0], [0.1, 783.0], [0.2, 783.0], [0.3, 783.0], [0.4, 783.0], [0.5, 783.0], [0.6, 783.0], [0.7, 783.0], [0.8, 783.0], [0.9, 783.0], [1.0, 783.0], [1.1, 783.0], [1.2, 783.0], [1.3, 783.0], [1.4, 783.0], [1.5, 783.0], [1.6, 783.0], [1.7, 1046.0], [1.8, 1046.0], [1.9, 1046.0], [2.0, 1046.0], [2.1, 1046.0], [2.2, 1046.0], [2.3, 1046.0], [2.4, 1046.0], [2.5, 1046.0], [2.6, 1046.0], [2.7, 1046.0], [2.8, 1046.0], [2.9, 1046.0], [3.0, 1046.0], [3.1, 1046.0], [3.2, 1046.0], [3.3, 1046.0], [3.4, 1155.0], [3.5, 1155.0], [3.6, 1155.0], [3.7, 1155.0], [3.8, 1155.0], [3.9, 1155.0], [4.0, 1155.0], [4.1, 1155.0], [4.2, 1155.0], [4.3, 1155.0], [4.4, 1155.0], [4.5, 1155.0], [4.6, 1155.0], [4.7, 1155.0], [4.8, 1155.0], [4.9, 1155.0], [5.0, 1237.0], [5.1, 1237.0], [5.2, 1237.0], [5.3, 1237.0], [5.4, 1237.0], [5.5, 1237.0], [5.6, 1237.0], [5.7, 1237.0], [5.8, 1237.0], [5.9, 1237.0], [6.0, 1237.0], [6.1, 1237.0], [6.2, 1237.0], [6.3, 1237.0], [6.4, 1237.0], [6.5, 1237.0], [6.6, 1237.0], [6.7, 1335.0], [6.8, 1335.0], [6.9, 1335.0], [7.0, 1335.0], [7.1, 1335.0], [7.2, 1335.0], [7.3, 1335.0], [7.4, 1335.0], [7.5, 1335.0], [7.6, 1335.0], [7.7, 1335.0], [7.8, 1335.0], [7.9, 1335.0], [8.0, 1335.0], [8.1, 1335.0], [8.2, 1335.0], [8.3, 1335.0], [8.4, 1369.0], [8.5, 1369.0], [8.6, 1369.0], [8.7, 1369.0], [8.8, 1369.0], [8.9, 1369.0], [9.0, 1369.0], [9.1, 1369.0], [9.2, 1369.0], [9.3, 1369.0], [9.4, 1369.0], [9.5, 1369.0], [9.6, 1369.0], [9.7, 1369.0], [9.8, 1369.0], [9.9, 1369.0], [10.0, 1470.0], [10.1, 1470.0], [10.2, 1470.0], [10.3, 1470.0], [10.4, 1470.0], [10.5, 1470.0], [10.6, 1470.0], [10.7, 1470.0], [10.8, 1470.0], [10.9, 1470.0], [11.0, 1470.0], [11.1, 1470.0], [11.2, 1470.0], [11.3, 1470.0], [11.4, 1470.0], [11.5, 1470.0], [11.6, 1470.0], [11.7, 1493.0], [11.8, 1493.0], [11.9, 1493.0], [12.0, 1493.0], [12.1, 1493.0], [12.2, 1493.0], [12.3, 1493.0], [12.4, 1493.0], [12.5, 1493.0], [12.6, 1493.0], [12.7, 1493.0], [12.8, 1493.0], [12.9, 1493.0], [13.0, 1493.0], [13.1, 1493.0], [13.2, 1493.0], [13.3, 1493.0], [13.4, 1775.0], [13.5, 1775.0], [13.6, 1775.0], [13.7, 1775.0], [13.8, 1775.0], [13.9, 1775.0], [14.0, 1775.0], [14.1, 1775.0], [14.2, 1775.0], [14.3, 1775.0], [14.4, 1775.0], [14.5, 1775.0], [14.6, 1775.0], [14.7, 1775.0], [14.8, 1775.0], [14.9, 1775.0], [15.0, 2590.0], [15.1, 2590.0], [15.2, 2590.0], [15.3, 2590.0], [15.4, 2590.0], [15.5, 2590.0], [15.6, 2590.0], [15.7, 2590.0], [15.8, 2590.0], [15.9, 2590.0], [16.0, 2590.0], [16.1, 2590.0], [16.2, 2590.0], [16.3, 2590.0], [16.4, 2590.0], [16.5, 2590.0], [16.6, 2590.0], [16.7, 2971.0], [16.8, 2971.0], [16.9, 2971.0], [17.0, 2971.0], [17.1, 2971.0], [17.2, 2971.0], [17.3, 2971.0], [17.4, 2971.0], [17.5, 2971.0], [17.6, 2971.0], [17.7, 2971.0], [17.8, 2971.0], [17.9, 2971.0], [18.0, 2971.0], [18.1, 2971.0], [18.2, 2971.0], [18.3, 2971.0], [18.4, 3195.0], [18.5, 3195.0], [18.6, 3195.0], [18.7, 3195.0], [18.8, 3195.0], [18.9, 3195.0], [19.0, 3195.0], [19.1, 3195.0], [19.2, 3195.0], [19.3, 3195.0], [19.4, 3195.0], [19.5, 3195.0], [19.6, 3195.0], [19.7, 3195.0], [19.8, 3195.0], [19.9, 3195.0], [20.0, 3379.0], [20.1, 3379.0], [20.2, 3379.0], [20.3, 3379.0], [20.4, 3379.0], [20.5, 3379.0], [20.6, 3379.0], [20.7, 3379.0], [20.8, 3379.0], [20.9, 3379.0], [21.0, 3379.0], [21.1, 3379.0], [21.2, 3379.0], [21.3, 3379.0], [21.4, 3379.0], [21.5, 3379.0], [21.6, 3379.0], [21.7, 3607.0], [21.8, 3607.0], [21.9, 3607.0], [22.0, 3607.0], [22.1, 3607.0], [22.2, 3607.0], [22.3, 3607.0], [22.4, 3607.0], [22.5, 3607.0], [22.6, 3607.0], [22.7, 3607.0], [22.8, 3607.0], [22.9, 3607.0], [23.0, 3607.0], [23.1, 3607.0], [23.2, 3607.0], [23.3, 3607.0], [23.4, 3931.0], [23.5, 3931.0], [23.6, 3931.0], [23.7, 3931.0], [23.8, 3931.0], [23.9, 3931.0], [24.0, 3931.0], [24.1, 3931.0], [24.2, 3931.0], [24.3, 3931.0], [24.4, 3931.0], [24.5, 3931.0], [24.6, 3931.0], [24.7, 3931.0], [24.8, 3931.0], [24.9, 3931.0], [25.0, 3931.0], [25.1, 4037.0], [25.2, 4037.0], [25.3, 4037.0], [25.4, 4037.0], [25.5, 4037.0], [25.6, 4037.0], [25.7, 4037.0], [25.8, 4037.0], [25.9, 4037.0], [26.0, 4037.0], [26.1, 4037.0], [26.2, 4037.0], [26.3, 4037.0], [26.4, 4037.0], [26.5, 4037.0], [26.6, 4037.0], [26.7, 4082.0], [26.8, 4082.0], [26.9, 4082.0], [27.0, 4082.0], [27.1, 4082.0], [27.2, 4082.0], [27.3, 4082.0], [27.4, 4082.0], [27.5, 4082.0], [27.6, 4082.0], [27.7, 4082.0], [27.8, 4082.0], [27.9, 4082.0], [28.0, 4082.0], [28.1, 4082.0], [28.2, 4082.0], [28.3, 4082.0], [28.4, 4517.0], [28.5, 4517.0], [28.6, 4517.0], [28.7, 4517.0], [28.8, 4517.0], [28.9, 4517.0], [29.0, 4517.0], [29.1, 4517.0], [29.2, 4517.0], [29.3, 4517.0], [29.4, 4517.0], [29.5, 4517.0], [29.6, 4517.0], [29.7, 4517.0], [29.8, 4517.0], [29.9, 4517.0], [30.0, 4517.0], [30.1, 4535.0], [30.2, 4535.0], [30.3, 4535.0], [30.4, 4535.0], [30.5, 4535.0], [30.6, 4535.0], [30.7, 4535.0], [30.8, 4535.0], [30.9, 4535.0], [31.0, 4535.0], [31.1, 4535.0], [31.2, 4535.0], [31.3, 4535.0], [31.4, 4535.0], [31.5, 4535.0], [31.6, 4535.0], [31.7, 4596.0], [31.8, 4596.0], [31.9, 4596.0], [32.0, 4596.0], [32.1, 4596.0], [32.2, 4596.0], [32.3, 4596.0], [32.4, 4596.0], [32.5, 4596.0], [32.6, 4596.0], [32.7, 4596.0], [32.8, 4596.0], [32.9, 4596.0], [33.0, 4596.0], [33.1, 4596.0], [33.2, 4596.0], [33.3, 4596.0], [33.4, 4609.0], [33.5, 4609.0], [33.6, 4609.0], [33.7, 4609.0], [33.8, 4609.0], [33.9, 4609.0], [34.0, 4609.0], [34.1, 4609.0], [34.2, 4609.0], [34.3, 4609.0], [34.4, 4609.0], [34.5, 4609.0], [34.6, 4609.0], [34.7, 4609.0], [34.8, 4609.0], [34.9, 4609.0], [35.0, 4609.0], [35.1, 4609.0], [35.2, 4609.0], [35.3, 4609.0], [35.4, 4609.0], [35.5, 4609.0], [35.6, 4609.0], [35.7, 4609.0], [35.8, 4609.0], [35.9, 4609.0], [36.0, 4609.0], [36.1, 4609.0], [36.2, 4609.0], [36.3, 4609.0], [36.4, 4609.0], [36.5, 4609.0], [36.6, 4609.0], [36.7, 4672.0], [36.8, 4672.0], [36.9, 4672.0], [37.0, 4672.0], [37.1, 4672.0], [37.2, 4672.0], [37.3, 4672.0], [37.4, 4672.0], [37.5, 4672.0], [37.6, 4672.0], [37.7, 4672.0], [37.8, 4672.0], [37.9, 4672.0], [38.0, 4672.0], [38.1, 4672.0], [38.2, 4672.0], [38.3, 4672.0], [38.4, 4742.0], [38.5, 4742.0], [38.6, 4742.0], [38.7, 4742.0], [38.8, 4742.0], [38.9, 4742.0], [39.0, 4742.0], [39.1, 4742.0], [39.2, 4742.0], [39.3, 4742.0], [39.4, 4742.0], [39.5, 4742.0], [39.6, 4742.0], [39.7, 4742.0], [39.8, 4742.0], [39.9, 4742.0], [40.0, 4742.0], [40.1, 4748.0], [40.2, 4748.0], [40.3, 4748.0], [40.4, 4748.0], [40.5, 4748.0], [40.6, 4748.0], [40.7, 4748.0], [40.8, 4748.0], [40.9, 4748.0], [41.0, 4748.0], [41.1, 4748.0], [41.2, 4748.0], [41.3, 4748.0], [41.4, 4748.0], [41.5, 4748.0], [41.6, 4748.0], [41.7, 4898.0], [41.8, 4898.0], [41.9, 4898.0], [42.0, 4898.0], [42.1, 4898.0], [42.2, 4898.0], [42.3, 4898.0], [42.4, 4898.0], [42.5, 4898.0], [42.6, 4898.0], [42.7, 4898.0], [42.8, 4898.0], [42.9, 4898.0], [43.0, 4898.0], [43.1, 4898.0], [43.2, 4898.0], [43.3, 4898.0], [43.4, 4906.0], [43.5, 4906.0], [43.6, 4906.0], [43.7, 4906.0], [43.8, 4906.0], [43.9, 4906.0], [44.0, 4906.0], [44.1, 4906.0], [44.2, 4906.0], [44.3, 4906.0], [44.4, 4906.0], [44.5, 4906.0], [44.6, 4906.0], [44.7, 4906.0], [44.8, 4906.0], [44.9, 4906.0], [45.0, 5082.0], [45.1, 5082.0], [45.2, 5082.0], [45.3, 5082.0], [45.4, 5082.0], [45.5, 5082.0], [45.6, 5082.0], [45.7, 5082.0], [45.8, 5082.0], [45.9, 5082.0], [46.0, 5082.0], [46.1, 5082.0], [46.2, 5082.0], [46.3, 5082.0], [46.4, 5082.0], [46.5, 5082.0], [46.6, 5082.0], [46.7, 5097.0], [46.8, 5097.0], [46.9, 5097.0], [47.0, 5097.0], [47.1, 5097.0], [47.2, 5097.0], [47.3, 5097.0], [47.4, 5097.0], [47.5, 5097.0], [47.6, 5097.0], [47.7, 5097.0], [47.8, 5097.0], [47.9, 5097.0], [48.0, 5097.0], [48.1, 5097.0], [48.2, 5097.0], [48.3, 5097.0], [48.4, 5128.0], [48.5, 5128.0], [48.6, 5128.0], [48.7, 5128.0], [48.8, 5128.0], [48.9, 5128.0], [49.0, 5128.0], [49.1, 5128.0], [49.2, 5128.0], [49.3, 5128.0], [49.4, 5128.0], [49.5, 5128.0], [49.6, 5128.0], [49.7, 5128.0], [49.8, 5128.0], [49.9, 5128.0], [50.0, 5154.0], [50.1, 5154.0], [50.2, 5154.0], [50.3, 5154.0], [50.4, 5154.0], [50.5, 5154.0], [50.6, 5154.0], [50.7, 5154.0], [50.8, 5154.0], [50.9, 5154.0], [51.0, 5154.0], [51.1, 5154.0], [51.2, 5154.0], [51.3, 5154.0], [51.4, 5154.0], [51.5, 5154.0], [51.6, 5154.0], [51.7, 5284.0], [51.8, 5284.0], [51.9, 5284.0], [52.0, 5284.0], [52.1, 5284.0], [52.2, 5284.0], [52.3, 5284.0], [52.4, 5284.0], [52.5, 5284.0], [52.6, 5284.0], [52.7, 5284.0], [52.8, 5284.0], [52.9, 5284.0], [53.0, 5284.0], [53.1, 5284.0], [53.2, 5284.0], [53.3, 5284.0], [53.4, 5315.0], [53.5, 5315.0], [53.6, 5315.0], [53.7, 5315.0], [53.8, 5315.0], [53.9, 5315.0], [54.0, 5315.0], [54.1, 5315.0], [54.2, 5315.0], [54.3, 5315.0], [54.4, 5315.0], [54.5, 5315.0], [54.6, 5315.0], [54.7, 5315.0], [54.8, 5315.0], [54.9, 5315.0], [55.0, 5368.0], [55.1, 5368.0], [55.2, 5368.0], [55.3, 5368.0], [55.4, 5368.0], [55.5, 5368.0], [55.6, 5368.0], [55.7, 5368.0], [55.8, 5368.0], [55.9, 5368.0], [56.0, 5368.0], [56.1, 5368.0], [56.2, 5368.0], [56.3, 5368.0], [56.4, 5368.0], [56.5, 5368.0], [56.6, 5368.0], [56.7, 5393.0], [56.8, 5393.0], [56.9, 5393.0], [57.0, 5393.0], [57.1, 5393.0], [57.2, 5393.0], [57.3, 5393.0], [57.4, 5393.0], [57.5, 5393.0], [57.6, 5393.0], [57.7, 5393.0], [57.8, 5393.0], [57.9, 5393.0], [58.0, 5393.0], [58.1, 5393.0], [58.2, 5393.0], [58.3, 5393.0], [58.4, 5401.0], [58.5, 5401.0], [58.6, 5401.0], [58.7, 5401.0], [58.8, 5401.0], [58.9, 5401.0], [59.0, 5401.0], [59.1, 5401.0], [59.2, 5401.0], [59.3, 5401.0], [59.4, 5401.0], [59.5, 5401.0], [59.6, 5401.0], [59.7, 5401.0], [59.8, 5401.0], [59.9, 5401.0], [60.0, 5405.0], [60.1, 5405.0], [60.2, 5405.0], [60.3, 5405.0], [60.4, 5405.0], [60.5, 5405.0], [60.6, 5405.0], [60.7, 5405.0], [60.8, 5405.0], [60.9, 5405.0], [61.0, 5405.0], [61.1, 5405.0], [61.2, 5405.0], [61.3, 5405.0], [61.4, 5405.0], [61.5, 5405.0], [61.6, 5405.0], [61.7, 5678.0], [61.8, 5678.0], [61.9, 5678.0], [62.0, 5678.0], [62.1, 5678.0], [62.2, 5678.0], [62.3, 5678.0], [62.4, 5678.0], [62.5, 5678.0], [62.6, 5678.0], [62.7, 5678.0], [62.8, 5678.0], [62.9, 5678.0], [63.0, 5678.0], [63.1, 5678.0], [63.2, 5678.0], [63.3, 5678.0], [63.4, 5696.0], [63.5, 5696.0], [63.6, 5696.0], [63.7, 5696.0], [63.8, 5696.0], [63.9, 5696.0], [64.0, 5696.0], [64.1, 5696.0], [64.2, 5696.0], [64.3, 5696.0], [64.4, 5696.0], [64.5, 5696.0], [64.6, 5696.0], [64.7, 5696.0], [64.8, 5696.0], [64.9, 5696.0], [65.0, 5706.0], [65.1, 5706.0], [65.2, 5706.0], [65.3, 5706.0], [65.4, 5706.0], [65.5, 5706.0], [65.6, 5706.0], [65.7, 5706.0], [65.8, 5706.0], [65.9, 5706.0], [66.0, 5706.0], [66.1, 5706.0], [66.2, 5706.0], [66.3, 5706.0], [66.4, 5706.0], [66.5, 5706.0], [66.6, 5706.0], [66.7, 6009.0], [66.8, 6009.0], [66.9, 6009.0], [67.0, 6009.0], [67.1, 6009.0], [67.2, 6009.0], [67.3, 6009.0], [67.4, 6009.0], [67.5, 6009.0], [67.6, 6009.0], [67.7, 6009.0], [67.8, 6009.0], [67.9, 6009.0], [68.0, 6009.0], [68.1, 6009.0], [68.2, 6009.0], [68.3, 6009.0], [68.4, 6138.0], [68.5, 6138.0], [68.6, 6138.0], [68.7, 6138.0], [68.8, 6138.0], [68.9, 6138.0], [69.0, 6138.0], [69.1, 6138.0], [69.2, 6138.0], [69.3, 6138.0], [69.4, 6138.0], [69.5, 6138.0], [69.6, 6138.0], [69.7, 6138.0], [69.8, 6138.0], [69.9, 6138.0], [70.0, 6229.0], [70.1, 6229.0], [70.2, 6229.0], [70.3, 6229.0], [70.4, 6229.0], [70.5, 6229.0], [70.6, 6229.0], [70.7, 6229.0], [70.8, 6229.0], [70.9, 6229.0], [71.0, 6229.0], [71.1, 6229.0], [71.2, 6229.0], [71.3, 6229.0], [71.4, 6229.0], [71.5, 6229.0], [71.6, 6229.0], [71.7, 6309.0], [71.8, 6309.0], [71.9, 6309.0], [72.0, 6309.0], [72.1, 6309.0], [72.2, 6309.0], [72.3, 6309.0], [72.4, 6309.0], [72.5, 6309.0], [72.6, 6309.0], [72.7, 6309.0], [72.8, 6309.0], [72.9, 6309.0], [73.0, 6309.0], [73.1, 6309.0], [73.2, 6309.0], [73.3, 6309.0], [73.4, 6357.0], [73.5, 6357.0], [73.6, 6357.0], [73.7, 6357.0], [73.8, 6357.0], [73.9, 6357.0], [74.0, 6357.0], [74.1, 6357.0], [74.2, 6357.0], [74.3, 6357.0], [74.4, 6357.0], [74.5, 6357.0], [74.6, 6357.0], [74.7, 6357.0], [74.8, 6357.0], [74.9, 6357.0], [75.0, 6492.0], [75.1, 6492.0], [75.2, 6492.0], [75.3, 6492.0], [75.4, 6492.0], [75.5, 6492.0], [75.6, 6492.0], [75.7, 6492.0], [75.8, 6492.0], [75.9, 6492.0], [76.0, 6492.0], [76.1, 6492.0], [76.2, 6492.0], [76.3, 6492.0], [76.4, 6492.0], [76.5, 6492.0], [76.6, 6492.0], [76.7, 6691.0], [76.8, 6691.0], [76.9, 6691.0], [77.0, 6691.0], [77.1, 6691.0], [77.2, 6691.0], [77.3, 6691.0], [77.4, 6691.0], [77.5, 6691.0], [77.6, 6691.0], [77.7, 6691.0], [77.8, 6691.0], [77.9, 6691.0], [78.0, 6691.0], [78.1, 6691.0], [78.2, 6691.0], [78.3, 6691.0], [78.4, 6717.0], [78.5, 6717.0], [78.6, 6717.0], [78.7, 6717.0], [78.8, 6717.0], [78.9, 6717.0], [79.0, 6717.0], [79.1, 6717.0], [79.2, 6717.0], [79.3, 6717.0], [79.4, 6717.0], [79.5, 6717.0], [79.6, 6717.0], [79.7, 6717.0], [79.8, 6717.0], [79.9, 6717.0], [80.0, 6717.0], [80.1, 7161.0], [80.2, 7161.0], [80.3, 7161.0], [80.4, 7161.0], [80.5, 7161.0], [80.6, 7161.0], [80.7, 7161.0], [80.8, 7161.0], [80.9, 7161.0], [81.0, 7161.0], [81.1, 7161.0], [81.2, 7161.0], [81.3, 7161.0], [81.4, 7161.0], [81.5, 7161.0], [81.6, 7161.0], [81.7, 7193.0], [81.8, 7193.0], [81.9, 7193.0], [82.0, 7193.0], [82.1, 7193.0], [82.2, 7193.0], [82.3, 7193.0], [82.4, 7193.0], [82.5, 7193.0], [82.6, 7193.0], [82.7, 7193.0], [82.8, 7193.0], [82.9, 7193.0], [83.0, 7193.0], [83.1, 7193.0], [83.2, 7193.0], [83.3, 7193.0], [83.4, 7370.0], [83.5, 7370.0], [83.6, 7370.0], [83.7, 7370.0], [83.8, 7370.0], [83.9, 7370.0], [84.0, 7370.0], [84.1, 7370.0], [84.2, 7370.0], [84.3, 7370.0], [84.4, 7370.0], [84.5, 7370.0], [84.6, 7370.0], [84.7, 7370.0], [84.8, 7370.0], [84.9, 7370.0], [85.0, 7370.0], [85.1, 7412.0], [85.2, 7412.0], [85.3, 7412.0], [85.4, 7412.0], [85.5, 7412.0], [85.6, 7412.0], [85.7, 7412.0], [85.8, 7412.0], [85.9, 7412.0], [86.0, 7412.0], [86.1, 7412.0], [86.2, 7412.0], [86.3, 7412.0], [86.4, 7412.0], [86.5, 7412.0], [86.6, 7412.0], [86.7, 7704.0], [86.8, 7704.0], [86.9, 7704.0], [87.0, 7704.0], [87.1, 7704.0], [87.2, 7704.0], [87.3, 7704.0], [87.4, 7704.0], [87.5, 7704.0], [87.6, 7704.0], [87.7, 7704.0], [87.8, 7704.0], [87.9, 7704.0], [88.0, 7704.0], [88.1, 7704.0], [88.2, 7704.0], [88.3, 7704.0], [88.4, 7888.0], [88.5, 7888.0], [88.6, 7888.0], [88.7, 7888.0], [88.8, 7888.0], [88.9, 7888.0], [89.0, 7888.0], [89.1, 7888.0], [89.2, 7888.0], [89.3, 7888.0], [89.4, 7888.0], [89.5, 7888.0], [89.6, 7888.0], [89.7, 7888.0], [89.8, 7888.0], [89.9, 7888.0], [90.0, 7888.0], [90.1, 8069.0], [90.2, 8069.0], [90.3, 8069.0], [90.4, 8069.0], [90.5, 8069.0], [90.6, 8069.0], [90.7, 8069.0], [90.8, 8069.0], [90.9, 8069.0], [91.0, 8069.0], [91.1, 8069.0], [91.2, 8069.0], [91.3, 8069.0], [91.4, 8069.0], [91.5, 8069.0], [91.6, 8069.0], [91.7, 8071.0], [91.8, 8071.0], [91.9, 8071.0], [92.0, 8071.0], [92.1, 8071.0], [92.2, 8071.0], [92.3, 8071.0], [92.4, 8071.0], [92.5, 8071.0], [92.6, 8071.0], [92.7, 8071.0], [92.8, 8071.0], [92.9, 8071.0], [93.0, 8071.0], [93.1, 8071.0], [93.2, 8071.0], [93.3, 8071.0], [93.4, 8094.0], [93.5, 8094.0], [93.6, 8094.0], [93.7, 8094.0], [93.8, 8094.0], [93.9, 8094.0], [94.0, 8094.0], [94.1, 8094.0], [94.2, 8094.0], [94.3, 8094.0], [94.4, 8094.0], [94.5, 8094.0], [94.6, 8094.0], [94.7, 8094.0], [94.8, 8094.0], [94.9, 8094.0], [95.0, 8094.0], [95.1, 8196.0], [95.2, 8196.0], [95.3, 8196.0], [95.4, 8196.0], [95.5, 8196.0], [95.6, 8196.0], [95.7, 8196.0], [95.8, 8196.0], [95.9, 8196.0], [96.0, 8196.0], [96.1, 8196.0], [96.2, 8196.0], [96.3, 8196.0], [96.4, 8196.0], [96.5, 8196.0], [96.6, 8196.0], [96.7, 8398.0], [96.8, 8398.0], [96.9, 8398.0], [97.0, 8398.0], [97.1, 8398.0], [97.2, 8398.0], [97.3, 8398.0], [97.4, 8398.0], [97.5, 8398.0], [97.6, 8398.0], [97.7, 8398.0], [97.8, 8398.0], [97.9, 8398.0], [98.0, 8398.0], [98.1, 8398.0], [98.2, 8398.0], [98.3, 8398.0], [98.4, 9293.0], [98.5, 9293.0], [98.6, 9293.0], [98.7, 9293.0], [98.8, 9293.0], [98.9, 9293.0], [99.0, 9293.0], [99.1, 9293.0], [99.2, 9293.0], [99.3, 9293.0], [99.4, 9293.0], [99.5, 9293.0], [99.6, 9293.0], [99.7, 9293.0], [99.8, 9293.0], [99.9, 9293.0], [100.0, 9293.0]], "isOverall": false, "label": "getProjectNavs", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 13.0, "series": [{"data": [[8300.0, 1.0], [9100.0, 1.0], [9400.0, 1.0], [10200.0, 1.0], [12900.0, 1.0], [15200.0, 1.0], [15400.0, 1.0], [16000.0, 2.0], [17400.0, 1.0], [24800.0, 1.0], [26300.0, 1.0], [28500.0, 1.0], [27800.0, 1.0], [32400.0, 1.0], [36900.0, 1.0], [39000.0, 1.0], [45400.0, 2.0], [48900.0, 1.0], [53400.0, 1.0], [53800.0, 1.0], [54400.0, 1.0], [55000.0, 1.0], [55500.0, 1.0], [57200.0, 4.0], [56600.0, 1.0], [57100.0, 2.0], [55300.0, 1.0], [56000.0, 1.0], [55900.0, 1.0], [59200.0, 2.0], [58200.0, 1.0], [58100.0, 1.0], [58400.0, 3.0], [59300.0, 2.0], [58000.0, 1.0], [58500.0, 1.0], [58700.0, 1.0], [58600.0, 2.0], [59000.0, 1.0], [58300.0, 1.0], [58800.0, 1.0], [59500.0, 1.0], [59900.0, 1.0], [60000.0, 1.0], [59600.0, 1.0], [59700.0, 1.0], [4300.0, 2.0], [5200.0, 1.0]], "isOverall": false, "label": "getAllUserGrants", "isController": false}, {"data": [[66900.0, 1.0], [68900.0, 1.0], [67700.0, 1.0], [70300.0, 1.0], [70500.0, 1.0], [73300.0, 1.0], [69900.0, 3.0], [71900.0, 1.0], [70100.0, 1.0], [73500.0, 1.0], [71100.0, 1.0], [75100.0, 1.0], [74900.0, 1.0], [75300.0, 1.0], [79300.0, 1.0], [22200.0, 1.0], [27400.0, 2.0], [27900.0, 1.0], [32100.0, 1.0], [38400.0, 1.0], [43800.0, 1.0], [46400.0, 1.0], [45500.0, 1.0], [46800.0, 1.0], [47700.0, 1.0], [47500.0, 1.0], [47800.0, 1.0], [48100.0, 1.0], [49600.0, 1.0], [50200.0, 1.0], [51700.0, 1.0], [51500.0, 1.0], [53000.0, 1.0], [52600.0, 1.0], [56300.0, 1.0], [56000.0, 1.0], [57700.0, 1.0], [58900.0, 1.0], [63100.0, 2.0], [63700.0, 1.0], [63600.0, 1.0], [64400.0, 1.0], [65500.0, 1.0], [65800.0, 1.0], [66800.0, 1.0], [68000.0, 2.0], [67600.0, 1.0], [67400.0, 1.0], [69600.0, 1.0], [67800.0, 1.0], [70400.0, 1.0], [71400.0, 1.0], [72400.0, 1.0], [72800.0, 1.0], [73800.0, 1.0]], "isOverall": false, "label": "getAllModules", "isController": false}, {"data": [[2100.0, 1.0], [600.0, 4.0], [700.0, 2.0], [3000.0, 1.0], [200.0, 3.0], [800.0, 4.0], [900.0, 4.0], [1000.0, 8.0], [1100.0, 4.0], [300.0, 4.0], [1200.0, 2.0], [400.0, 13.0], [1600.0, 2.0], [1700.0, 1.0], [500.0, 7.0]], "isOverall": false, "label": "getNavigations", "isController": false}, {"data": [[600.0, 2.0], [700.0, 4.0], [900.0, 2.0], [1000.0, 1.0], [18600.0, 1.0], [1300.0, 3.0], [1400.0, 1.0], [1500.0, 2.0], [1600.0, 2.0], [1700.0, 1.0], [1800.0, 2.0], [1900.0, 7.0], [2000.0, 5.0], [2100.0, 4.0], [2200.0, 2.0], [2300.0, 2.0], [2400.0, 2.0], [2500.0, 2.0], [2800.0, 2.0], [2700.0, 2.0], [3000.0, 2.0], [4200.0, 1.0], [300.0, 3.0], [400.0, 3.0], [500.0, 2.0]], "isOverall": false, "label": "getAllRolesAndGrades", "isController": false}, {"data": [[8300.0, 1.0], [9200.0, 1.0], [700.0, 1.0], [1000.0, 1.0], [1100.0, 1.0], [1200.0, 1.0], [1300.0, 2.0], [1400.0, 2.0], [1700.0, 1.0], [2500.0, 1.0], [2900.0, 1.0], [3100.0, 1.0], [3300.0, 1.0], [3600.0, 1.0], [3900.0, 1.0], [4000.0, 2.0], [4500.0, 3.0], [4600.0, 3.0], [4700.0, 2.0], [4800.0, 1.0], [5000.0, 2.0], [4900.0, 1.0], [5100.0, 2.0], [5300.0, 3.0], [5200.0, 1.0], [5400.0, 2.0], [5600.0, 2.0], [5700.0, 1.0], [6100.0, 1.0], [6000.0, 1.0], [6300.0, 2.0], [6200.0, 1.0], [6400.0, 1.0], [6600.0, 1.0], [6700.0, 1.0], [7100.0, 2.0], [7300.0, 1.0], [7400.0, 1.0], [7800.0, 1.0], [7700.0, 1.0], [8100.0, 1.0], [8000.0, 3.0]], "isOverall": false, "label": "getProjectNavs", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 79300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 26.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 216.0, "series": [{"data": [[0.0, 26.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 58.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 216.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 28.328467153284674, "minX": 1.66602366E12, "maxY": 60.0, "series": [{"data": [[1.66602372E12, 52.08024691358022], [1.66602366E12, 60.0], [1.66602378E12, 28.328467153284674]], "isOverall": false, "label": "Access Management", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66602378E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 248.0, "minX": 1.0, "maxY": 73351.84615384616, "series": [{"data": [[33.0, 58478.76470588236], [35.0, 58323.833333333336], [37.0, 55005.5], [36.0, 58258.0], [38.0, 53657.0], [41.0, 45463.5], [40.0, 48962.0], [43.0, 36953.0], [42.0, 39058.0], [47.0, 28015.6], [53.0, 9499.0], [52.0, 16064.6], [55.0, 4324.0], [54.0, 4383.0], [56.0, 5280.0], [59.0, 10223.0], [60.0, 10148.666666666666], [22.0, 55049.0], [23.0, 55930.0], [24.0, 58111.5], [26.0, 58609.0], [27.0, 56041.0], [29.0, 58434.0]], "isOverall": false, "label": "getAllUserGrants", "isController": false}, {"data": [[38.98333333333333, 43943.833333333336]], "isOverall": false, "label": "getAllUserGrants-Aggregated", "isController": false}, {"data": [[47.0, 73351.84615384616], [49.0, 70478.0], [48.0, 70936.5], [50.0, 69164.4], [53.0, 53226.333333333336], [52.0, 65800.93749999999], [55.0, 43859.0], [54.0, 47172.14285714286], [59.0, 38476.0], [60.0, 27443.0]], "isOverall": false, "label": "getAllModules", "isController": false}, {"data": [[51.783333333333324, 59889.23333333334]], "isOverall": false, "label": "getAllModules-Aggregated", "isController": false}, {"data": [[2.0, 1259.0], [3.0, 2157.0], [4.0, 582.0], [5.0, 587.0], [6.0, 983.0], [7.0, 563.0], [9.0, 405.5], [10.0, 601.0], [11.0, 396.0], [12.0, 976.0], [13.0, 580.0], [15.0, 1073.5], [16.0, 1036.0], [17.0, 405.0], [18.0, 418.0], [19.0, 383.0], [21.0, 979.0], [22.0, 414.0], [23.0, 1600.0], [24.0, 521.0], [25.0, 390.0], [26.0, 409.0], [27.0, 1647.0], [28.0, 1013.0], [29.0, 1276.0], [30.0, 1040.0], [31.0, 918.0], [33.0, 816.0], [32.0, 389.0], [35.0, 885.0], [34.0, 1073.0], [37.0, 568.0], [36.0, 791.0], [39.0, 667.0], [38.0, 818.0], [41.0, 1147.0], [40.0, 421.0], [43.0, 1009.0], [42.0, 1010.0], [45.0, 416.0], [44.0, 293.0], [47.0, 1728.0], [46.0, 412.0], [49.0, 1198.0], [48.0, 400.0], [51.0, 291.0], [50.0, 407.0], [53.0, 248.0], [52.0, 408.0], [55.0, 542.0], [54.0, 979.0], [57.0, 463.0], [56.0, 753.0], [59.0, 615.0], [58.0, 617.0], [60.0, 1145.0], [1.0, 3014.0]], "isOverall": false, "label": "getNavigations", "isController": false}, {"data": [[30.550000000000004, 809.8833333333336]], "isOverall": false, "label": "getNavigations-Aggregated", "isController": false}, {"data": [[47.0, 3374.947368421053], [48.0, 2051.0], [50.0, 1826.3333333333333], [53.0, 797.0], [52.0, 1811.7692307692307], [55.0, 420.0], [54.0, 561.1428571428571], [58.0, 658.0], [60.0, 1954.6]], "isOverall": false, "label": "getAllRolesAndGrades", "isController": false}, {"data": [[51.300000000000004, 2007.7333333333333]], "isOverall": false, "label": "getAllRolesAndGrades-Aggregated", "isController": false}, {"data": [[33.0, 6322.714285714285], [35.0, 6775.0], [37.0, 6591.5], [38.0, 7704.0], [41.0, 8398.0], [40.0, 7391.0], [43.0, 8069.0], [42.0, 7888.0], [45.0, 8082.5], [47.0, 9293.0], [46.0, 8196.0], [48.0, 5368.0], [51.0, 4748.0], [50.0, 5249.0], [53.0, 2590.0], [52.0, 4535.0], [55.0, 1046.0], [54.0, 1237.0], [56.0, 1155.0], [59.0, 1419.5], [58.0, 783.0], [60.0, 1335.0], [12.0, 2291.6666666666665], [13.0, 3379.0], [16.0, 4254.6], [21.0, 4244.666666666667], [22.0, 4723.888888888888], [23.0, 5315.0], [24.0, 5344.5], [26.0, 5706.0], [27.0, 5678.0]], "isOverall": false, "label": "getProjectNavs", "isController": false}, {"data": [[33.68333333333333, 5029.749999999999]], "isOverall": false, "label": "getProjectNavs-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 60.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 44.11666666666667, "minX": 1.66602366E12, "maxY": 3005373.966666667, "series": [{"data": [[1.66602372E12, 3005373.966666667], [1.66602366E12, 50568.666666666664], [1.66602378E12, 39891.38333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66602372E12, 7200.633333333333], [1.66602366E12, 44.11666666666667], [1.66602378E12, 6099.25]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66602378E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 620.4615384615386, "minX": 1.66602366E12, "maxY": 60527.16949152544, "series": [{"data": [[1.66602372E12, 14829.529411764704], [1.66602378E12, 55454.139534883725]], "isOverall": false, "label": "getAllUserGrants", "isController": false}, {"data": [[1.66602372E12, 60527.16949152544], [1.66602366E12, 22251.0]], "isOverall": false, "label": "getAllModules", "isController": false}, {"data": [[1.66602372E12, 620.4615384615386], [1.66602378E12, 862.276595744681]], "isOverall": false, "label": "getNavigations", "isController": false}, {"data": [[1.66602372E12, 2007.7333333333333]], "isOverall": false, "label": "getAllRolesAndGrades", "isController": false}, {"data": [[1.66602372E12, 2779.538461538462], [1.66602378E12, 5652.148936170212]], "isOverall": false, "label": "getProjectNavs", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66602378E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 408.92307692307696, "minX": 1.66602366E12, "maxY": 55452.41860465115, "series": [{"data": [[1.66602372E12, 14819.823529411764], [1.66602378E12, 55452.41860465115]], "isOverall": false, "label": "getAllUserGrants", "isController": false}, {"data": [[1.66602372E12, 28230.42372881357], [1.66602366E12, 21545.0]], "isOverall": false, "label": "getAllModules", "isController": false}, {"data": [[1.66602372E12, 408.92307692307696], [1.66602378E12, 546.9148936170212]], "isOverall": false, "label": "getNavigations", "isController": false}, {"data": [[1.66602372E12, 2006.4333333333336]], "isOverall": false, "label": "getAllRolesAndGrades", "isController": false}, {"data": [[1.66602372E12, 2746.230769230769], [1.66602378E12, 5650.404255319151]], "isOverall": false, "label": "getProjectNavs", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66602378E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.66602366E12, "maxY": 459.05084745762724, "series": [{"data": [[1.66602372E12, 0.0], [1.66602378E12, 4.5813953488372094]], "isOverall": false, "label": "getAllUserGrants", "isController": false}, {"data": [[1.66602372E12, 459.05084745762724], [1.66602366E12, 244.0]], "isOverall": false, "label": "getAllModules", "isController": false}, {"data": [[1.66602372E12, 0.0], [1.66602378E12, 78.40425531914893]], "isOverall": false, "label": "getNavigations", "isController": false}, {"data": [[1.66602372E12, 132.56666666666663]], "isOverall": false, "label": "getAllRolesAndGrades", "isController": false}, {"data": [[1.66602372E12, 83.53846153846155], [1.66602378E12, 178.02127659574475]], "isOverall": false, "label": "getProjectNavs", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66602378E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 248.0, "minX": 1.66602366E12, "maxY": 79371.0, "series": [{"data": [[1.66602372E12, 79371.0], [1.66602366E12, 22251.0], [1.66602378E12, 60026.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66602372E12, 70110.0], [1.66602366E12, 22251.0], [1.66602378E12, 58610.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66602372E12, 76822.02000000002], [1.66602366E12, 22251.0], [1.66602378E12, 59986.48]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66602372E12, 72807.84999999999], [1.66602366E12, 22251.0], [1.66602378E12, 59339.2]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66602372E12, 248.0], [1.66602366E12, 22251.0], [1.66602378E12, 293.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66602372E12, 4353.5], [1.66602366E12, 22251.0], [1.66602378E12, 5315.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66602378E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 976.0, "minX": 1.0, "maxY": 56628.0, "series": [{"data": [[2.0, 18462.0], [8.0, 31291.0], [9.0, 4535.0], [10.0, 4820.0], [3.0, 7412.0], [1.0, 4324.0], [4.0, 8082.5], [17.0, 976.0], [18.0, 3563.0], [5.0, 6357.0], [21.0, 56628.0], [6.0, 4115.5], [7.0, 10150.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 21.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 513.0, "minX": 1.0, "maxY": 56628.0, "series": [{"data": [[2.0, 16799.0], [8.0, 31289.5], [9.0, 4535.0], [10.0, 4820.0], [3.0, 7412.0], [1.0, 4323.0], [4.0, 8082.5], [17.0, 513.0], [18.0, 3563.0], [5.0, 6356.0], [21.0, 56628.0], [6.0, 4115.0], [7.0, 10149.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 21.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.0166666666666666, "minX": 1.66602366E12, "maxY": 2.4833333333333334, "series": [{"data": [[1.66602372E12, 2.4833333333333334], [1.66602366E12, 1.0166666666666666], [1.66602378E12, 1.5]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66602378E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.66602366E12, "maxY": 2.7, "series": [{"data": [[1.66602372E12, 2.7], [1.66602366E12, 0.016666666666666666], [1.66602378E12, 2.283333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66602378E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.66602366E12, "maxY": 1.0, "series": [{"data": [[1.66602372E12, 0.21666666666666667], [1.66602378E12, 0.7833333333333333]], "isOverall": false, "label": "getProjectNavs-success", "isController": false}, {"data": [[1.66602372E12, 0.21666666666666667], [1.66602378E12, 0.7833333333333333]], "isOverall": false, "label": "getNavigations-success", "isController": false}, {"data": [[1.66602372E12, 0.9833333333333333], [1.66602366E12, 0.016666666666666666]], "isOverall": false, "label": "getAllModules-success", "isController": false}, {"data": [[1.66602372E12, 1.0]], "isOverall": false, "label": "getAllRolesAndGrades-success", "isController": false}, {"data": [[1.66602372E12, 0.2833333333333333], [1.66602378E12, 0.7166666666666667]], "isOverall": false, "label": "getAllUserGrants-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66602378E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.66602366E12, "maxY": 2.7, "series": [{"data": [[1.66602372E12, 2.7], [1.66602366E12, 0.016666666666666666], [1.66602378E12, 2.283333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66602378E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

